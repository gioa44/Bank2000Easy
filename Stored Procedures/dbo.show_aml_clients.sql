SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE PROCEDURE [dbo].[show_aml_clients]
	@dt1 smalldatetime,
	@dt2 smalldatetime
AS

DECLARE @bad_clients TABLE (CLIENT_NO int NOT NULL PRIMARY KEY)
DECLARE @bad_clients_tr_in TABLE (CLIENT_NO int NOT NULL)
DECLARE @bad_clients_tr_out TABLE (CLIENT_NO int NOT NULL)
DECLARE @bad_clients_deb TABLE (CLIENT_NO int NOT NULL)
DECLARE @bad_clients_cre TABLE (CLIENT_NO int NOT NULL)
DECLARE @bad_clients_new TABLE (CLIENT_NO int NOT NULL)


INSERT INTO @bad_clients
SELECT CLIENT_NO
FROM dbo.CLIENTS C (NOLOCK)
	INNER JOIN dbo.COUNTRIES CT ON CT.COUNTRY = C.COUNTRY
WHERE CT.ZONE_TYPE <> 0

-- Out
INSERT INTO @bad_clients_tr_out
SELECT AD.CLIENT_NO
FROM dbo.OPS_0000 D (NOLOCK)
	INNER JOIN dbo.DOC_DETAILS_VALPLAT DD (NOLOCK) ON DD.DOC_REC_ID = D.REC_ID
	INNER JOIN dbo.ACCOUNTS AD (NOLOCK) ON AD.ACC_ID = D.DEBIT_ID
	INNER JOIN dbo.COUNTRIES CT (NOLOCK) ON CT.COUNTRY = SUBSTRING(DD.RECEIVER_BANK_CODE, 5, 2)
WHERE D.DOC_DATE BETWEEN @dt1 AND @dt2 AND D.DOC_TYPE BETWEEN 110 AND 119 AND CT.ZONE_TYPE <> 0 AND AD.CLIENT_NO IS NOT NULL

-- In
INSERT INTO @bad_clients_tr_in
SELECT AC.CLIENT_NO
FROM dbo.OPS_0000 D (NOLOCK)
	INNER JOIN dbo.DOC_DETAILS_VALPLAT DD (NOLOCK) ON DD.DOC_REC_ID = D.REC_ID
	INNER JOIN dbo.ACCOUNTS AC (NOLOCK) ON AC.ACC_ID = D.CREDIT_ID
	INNER JOIN dbo.COUNTRIES CT (NOLOCK) ON CT.COUNTRY = SUBSTRING(DD.SENDER_BANK_CODE, 5, 2)
WHERE D.DOC_DATE BETWEEN @dt1 AND @dt2 AND D.DOC_TYPE BETWEEN 110 AND 119 AND CT.ZONE_TYPE <> 0 AND AC.CLIENT_NO IS NOT NULL

-- Debit
INSERT INTO @bad_clients_deb
SELECT AD.CLIENT_NO
FROM dbo.OPS_0000 D (NOLOCK)
	INNER JOIN dbo.ACCOUNTS AD (NOLOCK) ON AD.ACC_ID = D.DEBIT_ID
	LEFT JOIN dbo.ACCOUNTS AC (NOLOCK) ON AC.ACC_ID = D.CREDIT_ID
WHERE D.DOC_DATE BETWEEN @dt1 AND @dt2 AND D.DOC_TYPE BETWEEN 100 AND 149 AND (AD.CLIENT_NO <> ISNULL(AC.CLIENT_NO, 0))
GROUP BY AD.CLIENT_NO, 
	CASE 
		WHEN D.DOC_TYPE BETWEEN 100 AND 109 THEN 100
		WHEN D.DOC_TYPE BETWEEN 110 AND 119 THEN 110
		WHEN D.DOC_TYPE BETWEEN 120 AND 129 THEN 120
		WHEN D.DOC_TYPE BETWEEN 130 AND 149 THEN 130
	END
HAVING SUM(D.AMOUNT_EQU) > 30000

-- Credit
INSERT INTO @bad_clients_cre
SELECT AC.CLIENT_NO
FROM dbo.OPS_0000 D (NOLOCK)
	INNER JOIN dbo.ACCOUNTS AC (NOLOCK) ON AC.ACC_ID = D.CREDIT_ID
	LEFT JOIN dbo.ACCOUNTS AD (NOLOCK) ON AD.ACC_ID = D.DEBIT_ID
WHERE D.DOC_DATE BETWEEN @dt1 AND @dt2 AND D.DOC_TYPE BETWEEN 100 AND 149 AND (AC.CLIENT_NO <> ISNULL(AD.CLIENT_NO, 0)) 
GROUP BY AC.CLIENT_NO, 
	CASE 
		WHEN D.DOC_TYPE BETWEEN 100 AND 109 THEN 100
		WHEN D.DOC_TYPE BETWEEN 110 AND 119 THEN 110
		WHEN D.DOC_TYPE BETWEEN 120 AND 129 THEN 120
		WHEN D.DOC_TYPE BETWEEN 130 AND 149 THEN 130
	END
HAVING SUM(D.AMOUNT_EQU) > 30000

-- New
INSERT INTO @bad_clients_new
SELECT C.CLIENT_NO
FROM dbo.OPS_0000 D (NOLOCK)
	LEFT JOIN dbo.ACCOUNTS AC (NOLOCK) ON AC.ACC_ID = D.CREDIT_ID
	LEFT JOIN dbo.ACCOUNTS AD (NOLOCK) ON AD.ACC_ID = D.DEBIT_ID
	LEFT JOIN dbo.CLIENTS C (NOLOCK) ON C.CLIENT_NO = AC.CLIENT_NO OR C.CLIENT_NO = AD.CLIENT_NO
WHERE D.DOC_DATE BETWEEN @dt1 AND @dt2 AND ISNULL(C.REG_DATE, '20000101') > @dt1 - 90 AND C.IS_JURIDICAL = 1

SELECT pvt.CLIENT_NO, 
	C.DESCRIP,
	CONVERT(bit, pvt.[1]) AS OFFSHORE, 
	CONVERT(bit, CASE WHEN pvt.[2] > 0 THEN 1 ELSE 0 END) AS DEB, 
	CONVERT(bit, CASE WHEN pvt.[3] > 0 THEN 1 ELSE 0 END) AS CRE, 
	CONVERT(bit, pvt.[4]) AS TR_OUT, 
	CONVERT(bit, pvt.[5]) AS TR_IN,
	CONVERT(bit, pvt.[6]) AS NEW,
	DP.ALIAS AS BRANCH_ALIAS
FROM
(
	SELECT CLIENT_NO, 1 AS STATE FROM @bad_clients
	UNION ALL
	SELECT CLIENT_NO, 2 AS STATE FROM @bad_clients_deb
	UNION ALL
	SELECT CLIENT_NO, 3 AS STATE FROM @bad_clients_cre
	UNION ALL
	SELECT CLIENT_NO, 4 AS STATE FROM @bad_clients_tr_out
	UNION ALL
	SELECT CLIENT_NO, 5 AS STATE FROM @bad_clients_tr_in
	UNION ALL
	SELECT CLIENT_NO, 6 AS STATE FROM @bad_clients_new
) t
PIVOT ( COUNT(STATE) FOR t.STATE IN ([1], [2], [3], [4], [5], [6])) AS pvt
	INNER JOIN dbo.CLIENTS C (NOLOCK) ON C.CLIENT_NO = pvt.CLIENT_NO
	INNER JOIN dbo.DEPTS DP (NOLOCK) ON DP.DEPT_NO = C.DEPT_NO
ORDER BY CLIENT_NO
GO
