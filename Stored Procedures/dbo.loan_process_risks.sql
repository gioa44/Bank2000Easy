SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE [dbo].[loan_process_risks]
	@date smalldatetime,
	@user_id int,
	@loan_id int = NULL
AS
SET NOCOUNT ON

DECLARE
	@r int,
	@client_no int,
	@max_category_level int

IF @loan_id IS NOT NULL
	SELECT @client_no = CLIENT_NO
	FROM dbo.LOANS (NOLOCK)
	WHERE LOAN_ID = @loan_id
ELSE
	SET @client_no = null

DECLARE cc CURSOR LOCAL FORWARD_ONLY FAST_FORWARD READ_ONLY 
FOR SELECT CLIENT_NO
FROM dbo.LOANS
WHERE [STATE] <> 255 AND (@client_no IS NULL OR CLIENT_NO = @client_no)
GROUP BY CLIENT_NO
HAVING COUNT(*) > 1

OPEN cc

FETCH NEXT FROM cc INTO @client_no

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @max_category_level = null

	SELECT @max_category_level = MAX(D.MAX_CATEGORY_LEVEL)
	FROM dbo.LOAN_DETAILS D (NOLOCK)
		INNER JOIN dbo.LOANS L (NOLOCK) ON L.LOAN_ID = D.LOAN_ID
	WHERE L.CLIENT_NO = @client_no AND L.STATE <> 255 -- dbo.loan_const_state_closed()

	IF @max_category_level = 6
		SET @max_category_level = 5

	IF @max_category_level IS NOT NULL
	BEGIN
		UPDATE LOAN_DETAILS
			SET MAX_CATEGORY_LEVEL = @max_category_level,
			CATEGORY_1 = CASE WHEN @max_category_level = 1 THEN ISNULL(D.CATEGORY_1, $0.00) + ISNULL(D.CATEGORY_2, $0.00) + ISNULL(D.CATEGORY_3, $0.00) + ISNULL(D.CATEGORY_4, $0.00) + ISNULL(D.CATEGORY_5, $0.00) ELSE NULL END,
			CATEGORY_2 = CASE WHEN @max_category_level = 2 THEN ISNULL(D.CATEGORY_1, $0.00) + ISNULL(D.CATEGORY_2, $0.00) + ISNULL(D.CATEGORY_3, $0.00) + ISNULL(D.CATEGORY_4, $0.00) + ISNULL(D.CATEGORY_5, $0.00) ELSE NULL END,
			CATEGORY_3 = CASE WHEN @max_category_level = 3 THEN ISNULL(D.CATEGORY_1, $0.00) + ISNULL(D.CATEGORY_2, $0.00) + ISNULL(D.CATEGORY_3, $0.00) + ISNULL(D.CATEGORY_4, $0.00) + ISNULL(D.CATEGORY_5, $0.00) ELSE NULL END,
			CATEGORY_4 = CASE WHEN @max_category_level = 4 THEN ISNULL(D.CATEGORY_1, $0.00) + ISNULL(D.CATEGORY_2, $0.00) + ISNULL(D.CATEGORY_3, $0.00) + ISNULL(D.CATEGORY_4, $0.00) + ISNULL(D.CATEGORY_5, $0.00) ELSE NULL END,
			CATEGORY_5 = CASE WHEN @max_category_level = 5 THEN ISNULL(D.CATEGORY_1, $0.00) + ISNULL(D.CATEGORY_2, $0.00) + ISNULL(D.CATEGORY_3, $0.00) + ISNULL(D.CATEGORY_4, $0.00) + ISNULL(D.CATEGORY_5, $0.00) ELSE NULL END
		FROM dbo.LOANS L
			INNER JOIN dbo.LOAN_DETAILS D ON D.LOAN_ID = L.LOAN_ID
			LEFT OUTER JOIN	dbo.LOAN_VW_LOAN_OP_RESTRUCTURE_RISKS O ON O.OP_ID = (SELECT MAX(O1.OP_ID) FROM dbo.LOAN_VW_LOAN_OP_RESTRUCTURE_RISKS O1 WHERE O1.LOAN_ID = L.LOAN_ID)
		WHERE L.CLIENT_NO = @client_no AND D.MAX_CATEGORY_LEVEL < 6 AND (O.OP_ID IS NULL OR ISNULL(O.NON_AUTO_CALC, 0) = 0) AND L.STATE <> 255 -- dbo.loan_const_state_closed() 
	END

	FETCH NEXT FROM cc INTO @client_no
END

CLOSE cc
DEALLOCATE cc

RETURN 0

_ret_error:

CLOSE cc
DEALLOCATE cc

RETURN (1)
GO
