SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE PROCEDURE [dbo].[depo_sp_delete_exec_op]
	@op_id int,
	@user_id int
AS

SET NOCOUNT ON;

DECLARE 
	@r int

DECLARE @internal_transaction bit
SET @internal_transaction = 0
IF @@TRANCOUNT = 0
BEGIN
	BEGIN TRAN
	SET @internal_transaction = 1
END

DECLARE
	@state tinyint

DECLARE
	@depo_id int,
	@depo_type int,
	@end_date smalldatetime,
	@spend_amount money,
	@op_date smalldatetime,
	@op_type smallint,
	@op_state bit,
	@op_amount money,
	@op_data xml,
	@doc_rec_id int,
	@accrue_doc_rec_id int,
	@op_acc_data xml,
	@recalculate_schedule bit

DECLARE
	@op_docs_deleted bit,
	@accrue_docs_deleted bit

DECLARE
	@saldo_date smalldatetime,
	@shadow_level smallint,
	@saldo money,
	@saldo_equ money
	
DECLARE
	@acc_changes varchar(1000),
	@skip_realize bit,
	@account_rec_state tinyint,
	@account_date_close smalldatetime,
	@account_rec_state2 tinyint,
	@account_date_close2 smalldatetime

DECLARE 
	@prev_end_date smalldatetime,
	@min_amount_check_date smalldatetime,
	@prew_intrate money,			
	@change_intrate bit
	
DECLARE -- common variables
	@prolongable bit,
	@prolongation_count int,
	@renewable bit,
	@renew_capitalized bit,
	@renew_count int,
	@renew_max int,
	@renew_last_prod_id int,
	@last_renew_date smalldatetime
	
SELECT @depo_id = DEPO_ID, @op_date = OP_DATE, @op_type = OP_TYPE, @op_state = OP_STATE, @op_amount = AMOUNT, @op_data = OP_DATA, @doc_rec_id = DOC_REC_ID, @accrue_doc_rec_id = ACCRUE_DOC_REC_ID
FROM dbo.DEPO_OP
WHERE OP_ID = @op_id
IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>OPERATION NOT FOUND</ERR>', 16, 1); RETURN (1); END

IF @op_state = 0
  BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ÏÐÄÒÀÝÉÉÓ ÛÄÓÒÖËÄÁÀ ÂÀÖØÌÄÁÖËÉÀ, ÂÀÍÀÀáËÄÈ ÌÏÍÀÝÄÌÄÁÉ!</ERR>', 16, 1); RETURN (1); END

DECLARE
	@client_no int,
	@acc_client_no int,
	@depo_acc_id int,
	@loss_acc_id int,
	@accrual_acc_id int,
	@rec_id int,
	@acc_arc_rec_id int,
	@op_acc_arc_rec_id int,
	@interest_realize_adv_acc_id int

SELECT @client_no = CLIENT_NO, @depo_type = DEPO_TYPE, @spend_amount = SPEND_AMOUNT, @depo_acc_id = DEPO_ACC_ID, @end_date = END_DATE
FROM dbo.DEPO_DEPOSITS
WHERE DEPO_ID = @depo_id
IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>DEPOSIT NOT FOUND</ERR>', 16, 1); RETURN (1); END

IF @op_type = dbo.depo_fn_const_op_active()
BEGIN
	DELETE FROM dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK)
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0
	BEGIN
		IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; 
		RAISERROR('<ERR>ÛÄÝÃÏÌÀ ÀÍÀÁÒÉÓ ÀÍÂÀÒÉÛÆÄ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÉÓ ßÀÛËÉÓÀÓ!</ERR>', 16, 1) 
		RETURN (1)
	END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_accumulate()
BEGIN
	DECLARE
		@real_intrate decimal(32,12),
		@change_formula bit

	SELECT @real_intrate = REAL_INTRATE, @change_formula = CHANGE_FORMULA
	FROM dbo.DEPO_VW_OP_DATA_ACCUMULATE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET AMOUNT = AMOUNT - @op_amount, REAL_INTRATE = @real_intrate
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END

	IF @change_formula = 1
	BEGIN
		SELECT @acc_arc_rec_id = ACC_ARC_REC_ID
		FROM dbo.DEPO_VW_OP_ACC_DATA_ACCUMULATE
		WHERE OP_ID = @op_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÓ ÈÀÍáÉÓ ÃÀÌÀÔÄÁÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()


		DELETE FROM dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK)
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.ACCOUNTS_CRED_PERC (ACC_ID, [START_DATE], END_DATE, MOVE_COUNT, MOVE_COUNT_TYPE, CALC_TYPE, FORMULA, CLIENT_ACCOUNT, PERC_CLIENT_ACCOUNT, PERC_BANK_ACCOUNT,
			DAYS_IN_YEAR, CALC_AMOUNT, TOTAL_CALC_AMOUNT, TOTAL_PAYED_AMOUNT, LAST_CALC_DATE, LAST_MOVE_DATE, PERC_FLAGS, PERC_TYPE, TAX_RATE, START_DATE_TYPE, START_DATE_DAYS, DATE_TYPE,
			DEPO_ID, RECALCULATE_TYPE, DEPO_REALIZE_ACC_ID, INTEREST_REALIZE_ACC_ID, DEPO_REALIZE_AMOUNT, INTEREST_REALIZE_AMOUNT, ADVANCE_ACC_ID, ADVANCE_AMOUNT, MIN_PROCESSING_DATE, MIN_PROCESSING_TOTAL_CALC_AMOUNT)
		SELECT ACC_ID, [START_DATE], END_DATE, MOVE_COUNT, MOVE_COUNT_TYPE, CALC_TYPE, FORMULA, CLIENT_ACCOUNT, PERC_CLIENT_ACCOUNT, PERC_BANK_ACCOUNT,
			DAYS_IN_YEAR, CALC_AMOUNT, TOTAL_CALC_AMOUNT, TOTAL_PAYED_AMOUNT, LAST_CALC_DATE, LAST_MOVE_DATE, PERC_FLAGS, PERC_TYPE, TAX_RATE, START_DATE_TYPE, START_DATE_DAYS, DATE_TYPE,
			DEPO_ID, RECALCULATE_TYPE, DEPO_REALIZE_ACC_ID, INTEREST_REALIZE_ACC_ID, DEPO_REALIZE_AMOUNT, INTEREST_REALIZE_AMOUNT, ADVANCE_ACC_ID, ADVANCE_AMOUNT, MIN_PROCESSING_DATE, MIN_PROCESSING_TOTAL_CALC_AMOUNT
		FROM dbo.ACCOUNTS_CRED_PERC_ARC
		WHERE REC_ID = @acc_arc_rec_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

		EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @depo_acc_id, @user_id
		IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
	END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_realize_interest()
BEGIN
	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET AMOUNT = AMOUNT - @op_amount
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_withdraw()
BEGIN
	DECLARE 
		@change_spend_const_amount bit,
		@prev_spend_const_amount money,
		@prev_formula varchar(255)

	SELECT @change_spend_const_amount = CHANGE_SPEND_CONST_AMOUNT, @prev_spend_const_amount = PREV_SPEND_CONST_AMOUNT, @change_formula = CHANGE_FORMULA, @prev_formula = PREV_FORMULA
	FROM dbo.DEPO_VW_OP_DATA_WITHDRAW
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET AMOUNT = AMOUNT + @op_amount
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END

	IF @change_spend_const_amount = 1
	BEGIN
		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET SPEND_CONST_AMOUNT = @prev_spend_const_amount
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END				
	END

	IF @change_formula = 1
	BEGIN
		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET FORMULA = @prev_formula
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END				

		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÃÀÍ ÈÀÍáÉÓ ÂÀÔÀÍÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
		SET FORMULA = @prev_formula
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END
	END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_withdraw_interest_tax()
BEGIN
	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET AMOUNT = AMOUNT + @op_amount
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_withdraw_schedule()
BEGIN
	DECLARE 
		@depo_withdraw_amount_schedule money

	SELECT @depo_withdraw_amount_schedule = DEPO_AMOUNT
	FROM dbo.DEPO_VW_OP_DATA_WITHDRAW_SCHEDULE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET AMOUNT = AMOUNT + @depo_withdraw_amount_schedule
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_revision()
BEGIN
	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ: UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÓ ÒÄÅÉÆÉÀ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.FORMULA = V.FORMULA
	FROM dbo.ACCOUNTS_CRED_PERC CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_REVISION V ON CP.ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.FORMULA = V.FORMULA
	FROM dbo.DEPO_DEPOSITS CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_REVISION V ON CP.DEPO_ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_intrate_change()
BEGIN

	SELECT @change_intrate=CHANGE_INTRATE, @prew_intrate = PREV_INTRATE, @recalculate_schedule = RECALCULATE_SCHEDULE
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_INTRATE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ: UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ(ÀÍÀÁÀÒÆÄ ÐÒÏÝÄÍÔÉÓ ÛÄÝÅËÉÓ ÂÀÖØÌÄÁÀ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	IF @change_intrate=1
	BEGIN
		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET REAL_INTRATE = @prew_intrate,
			INTRATE = @prew_intrate
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
	END
	ELSE
	BEGIN
		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET REAL_INTRATE = @prew_intrate
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
	END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.FORMULA = V.FORMULA
	FROM dbo.ACCOUNTS_CRED_PERC CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_CHANGE_INTRATE V ON CP.ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.FORMULA = V.FORMULA
	FROM dbo.DEPO_DEPOSITS CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_CHANGE_INTRATE V ON CP.DEPO_ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END

	IF @recalculate_schedule = 1
	BEGIN	
		DELETE FROM dbo.DEPO_SCHEDULE WITH (ROWLOCK)
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETE DEPO SCHEDULE</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.DEPO_SCHEDULE
		(DEPO_ID, SCHEDULE_DATE, PAYMENT, PRINCIPAL, INTEREST, INTEREST_TAX, TAX, BALANCE)
		SELECT DEPO_ID, SCHEDULE_DATE, PAYMENT, PRINCIPAL, INTEREST, INTEREST_TAX, TAX, BALANCE
		FROM dbo.DEPO_SCHEDULE_ARC (NOLOCK)
		WHERE OP_ID = @op_id AND DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPO SCHEDULE</ERR>', 16, 1); RETURN (1); END

		DELETE FROM dbo.DEPO_SCHEDULE_ARC WITH (ROWLOCK)
		WHERE OP_ID = @op_id AND DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETE DEPO SCHEDULE ARC</ERR>', 16, 1); RETURN (1); END											
	END

END
ELSE
IF @op_type = dbo.depo_fn_const_op_taxrate_change()
BEGIN
	SELECT @prew_intrate = PREV_TAXRATE
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_TAXRATE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÃÀÓÀÁÄÂÒÉ ÓÀÐÒÏÝÄÍÔÏ ÂÀÍÀÊÅÄÈÉÓ ÛÄÝÅËÀ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
	SET TAX_RATE = @prew_intrate
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_intrate_advance()
BEGIN
	SELECT @prev_formula = PREV_FORMULA
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_INTRATE_ADVANCE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ: UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ(ÀËÔÄÒÍÀÔÉÖËÉ ×ÏÒÌÖËÉÓ ÛÄÝÅËÉÓ ÂÀÖØÌÄÁÀ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.[START_DATE] = V.[START_DATE]
		,CP.END_DATE = V.END_DATE
		,CP.MOVE_COUNT = V.MOVE_COUNT
		,CP.MOVE_COUNT_TYPE = V.MOVE_COUNT_TYPE
		,CP.CALC_TYPE = V.CALC_TYPE
		,CP.FORMULA = V.FORMULA
		,CP.CLIENT_ACCOUNT = V.CLIENT_ACCOUNT
		,CP.PERC_CLIENT_ACCOUNT = V.PERC_CLIENT_ACCOUNT
		,CP.PERC_BANK_ACCOUNT = V.PERC_BANK_ACCOUNT
		,CP.DAYS_IN_YEAR = V.DAYS_IN_YEAR
		,CP.CALC_AMOUNT = V.CALC_AMOUNT
		,CP.TOTAL_CALC_AMOUNT = V.TOTAL_CALC_AMOUNT
		,CP.TOTAL_PAYED_AMOUNT = V.TOTAL_PAYED_AMOUNT
		,CP.LAST_CALC_DATE = V.LAST_CALC_DATE
		,CP.LAST_MOVE_DATE = V.LAST_MOVE_DATE
		,CP.PERC_FLAGS = V.PERC_FLAGS
		,CP.PERC_TYPE = V.PERC_TYPE
		,CP.TAX_RATE = V.TAX_RATE
		,CP.START_DATE_TYPE = V.START_DATE_TYPE
		,CP.START_DATE_DAYS = V.START_DATE_DAYS
		,CP.DATE_TYPE = V.DATE_TYPE
		,CP.DEPO_ID = V.DEPO_ID
		,CP.RECALCULATE_TYPE = V.RECALCULATE_TYPE
		,CP.DEPO_REALIZE_ACC_ID = V.DEPO_REALIZE_ACC_ID
		,CP.INTEREST_REALIZE_ACC_ID = V.INTEREST_REALIZE_ACC_ID
		,CP.DEPO_REALIZE_AMOUNT = V.DEPO_REALIZE_AMOUNT
		,CP.INTEREST_REALIZE_AMOUNT = V.INTEREST_REALIZE_AMOUNT
		,CP.ADVANCE_ACC_ID = V.ADVANCE_ACC_ID
		,CP.ADVANCE_AMOUNT = V.ADVANCE_AMOUNT
		,CP.MIN_PROCESSING_DATE = V.MIN_PROCESSING_DATE
		,CP.MIN_PROCESSING_TOTAL_CALC_AMOUNT = V.MIN_PROCESSING_TOTAL_CALC_AMOUNT
		,CP.TOTAL_TAX_PAYED_AMOUNT = V.TOTAL_TAX_PAYED_AMOUNT
		,CP.TOTAL_TAX_PAYED_AMOUNT_EQU = V.TOTAL_TAX_PAYED_AMOUNT_EQU
	FROM dbo.ACCOUNTS_CRED_PERC CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_CHANGE_INTRATE_ADVANCE V ON CP.ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS  WITH (ROWLOCK, UPDLOCK)
	SET FORMULA = @prev_formula
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_function_advance()
BEGIN
	SELECT @prev_formula = PREV_FORMULA
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_FUNCTION_ADVANCE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ: UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ(ÀËÔÄÒÍÀÔÉÖËÉ ×ÏÒÌÖËÉÓ ÛÄÝÅËÉÓ ÂÀÖØÌÄÁÀ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.[START_DATE] = V.[START_DATE]
		,CP.END_DATE = V.END_DATE
		,CP.MOVE_COUNT = V.MOVE_COUNT
		,CP.MOVE_COUNT_TYPE = V.MOVE_COUNT_TYPE
		,CP.CALC_TYPE = V.CALC_TYPE
		,CP.FORMULA = V.FORMULA
		,CP.CLIENT_ACCOUNT = V.CLIENT_ACCOUNT
		,CP.PERC_CLIENT_ACCOUNT = V.PERC_CLIENT_ACCOUNT
		,CP.PERC_BANK_ACCOUNT = V.PERC_BANK_ACCOUNT
		,CP.DAYS_IN_YEAR = V.DAYS_IN_YEAR
		,CP.CALC_AMOUNT = V.CALC_AMOUNT
		,CP.TOTAL_CALC_AMOUNT = V.TOTAL_CALC_AMOUNT
		,CP.TOTAL_PAYED_AMOUNT = V.TOTAL_PAYED_AMOUNT
		,CP.LAST_CALC_DATE = V.LAST_CALC_DATE
		,CP.LAST_MOVE_DATE = V.LAST_MOVE_DATE
		,CP.PERC_FLAGS = V.PERC_FLAGS
		,CP.PERC_TYPE = V.PERC_TYPE
		,CP.TAX_RATE = V.TAX_RATE
		,CP.START_DATE_TYPE = V.START_DATE_TYPE
		,CP.START_DATE_DAYS = V.START_DATE_DAYS
		,CP.DATE_TYPE = V.DATE_TYPE
		,CP.DEPO_ID = V.DEPO_ID
		,CP.RECALCULATE_TYPE = V.RECALCULATE_TYPE
		,CP.DEPO_REALIZE_ACC_ID = V.DEPO_REALIZE_ACC_ID
		,CP.INTEREST_REALIZE_ACC_ID = V.INTEREST_REALIZE_ACC_ID
		,CP.DEPO_REALIZE_AMOUNT = V.DEPO_REALIZE_AMOUNT
		,CP.INTEREST_REALIZE_AMOUNT = V.INTEREST_REALIZE_AMOUNT
		,CP.ADVANCE_ACC_ID = V.ADVANCE_ACC_ID
		,CP.ADVANCE_AMOUNT = V.ADVANCE_AMOUNT
		,CP.MIN_PROCESSING_DATE = V.MIN_PROCESSING_DATE
		,CP.MIN_PROCESSING_TOTAL_CALC_AMOUNT = V.MIN_PROCESSING_TOTAL_CALC_AMOUNT
		,CP.TOTAL_TAX_PAYED_AMOUNT = V.TOTAL_TAX_PAYED_AMOUNT
		,CP.TOTAL_TAX_PAYED_AMOUNT_EQU = V.TOTAL_TAX_PAYED_AMOUNT_EQU
	FROM dbo.ACCOUNTS_CRED_PERC CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_FUNCTION_ADVANCE V ON CP.ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS  WITH (ROWLOCK, UPDLOCK)
	SET FORMULA = @prev_formula
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_prolongation()
BEGIN
	SELECT @prev_end_date = PREV_END_DATE
	FROM dbo.DEPO_VW_OP_DATA_PROLONGATION
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	SELECT @depo_acc_id=DEPO_ACC_ID, @accrual_acc_id=ACCRUAL_ACC_ID, @loss_acc_id=LOSS_ACC_ID, @interest_realize_adv_acc_id=INTEREST_REALIZE_ADV_ACC_ID
	FROM dbo.DEPO_DEPOSITS
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR DEPOSIT DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS  WITH (ROWLOCK, UPDLOCK)
	SET END_DATE = @prev_end_date,
		PROLONGATION_COUNT = CASE WHEN ISNULL(PROLONGATION_COUNT, 0) = 1 THEN NULL ELSE ISNULL(PROLONGATION_COUNT, 0) - 1 END
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END


	SELECT @acc_client_no = CLIENT_NO
	FROM dbo.ACCOUNTS (NOLOCK)
	WHERE ACC_ID = @depo_acc_id
	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)		
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
		
		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR INSERT ACCOUNT CRED PERC ARC', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
		SET END_DATE = @prev_end_date
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END
	END

	SELECT @acc_client_no = CLIENT_NO
	FROM dbo.ACCOUNTS (NOLOCK)
	WHERE ACC_ID = @accrual_acc_id
	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@accrual_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @accrual_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
		PERIOD = @prev_end_date
		WHERE ACC_ID = @accrual_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END

	SELECT @acc_client_no = CLIENT_NO
	FROM dbo.ACCOUNTS (NOLOCK)
	WHERE ACC_ID = @loss_acc_id
	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@loss_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @loss_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @loss_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END

	IF @interest_realize_adv_acc_id IS NULL	
		SET @acc_client_no = NULL
	ELSE
	BEGIN
		SELECT @acc_client_no = CLIENT_NO
		FROM ACCOUNTS
		WHERE ACC_ID = @interest_realize_adv_acc_id
	END

	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@interest_realize_adv_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @interest_realize_adv_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @interest_realize_adv_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_prolongation_intrate_change()
BEGIN
	SELECT @prev_end_date = PREV_END_DATE, @change_intrate=CHANGE_INTRATE, @prew_intrate = PREV_INTRATE, @recalculate_schedule = RECALCULATE_SCHEDULE
	FROM dbo.DEPO_VW_OP_DATA_PROLONGATION_INTRATE_CHANGE
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	SELECT @depo_acc_id=DEPO_ACC_ID, @accrual_acc_id=ACCRUAL_ACC_ID, @loss_acc_id=LOSS_ACC_ID, @interest_realize_adv_acc_id=INTEREST_REALIZE_ADV_ACC_ID
	FROM dbo.DEPO_DEPOSITS
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR DEPOSIT DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	IF @change_intrate=1
	BEGIN
		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET REAL_INTRATE = @prew_intrate,
			INTRATE = @prew_intrate,
			END_DATE = @prev_end_date,
			PROLONGATION_COUNT = CASE WHEN ISNULL(PROLONGATION_COUNT, 0) = 1 THEN NULL ELSE ISNULL(PROLONGATION_COUNT, 0) - 1 END
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
	END
	ELSE
	BEGIN
		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET REAL_INTRATE = @prew_intrate,
			END_DATE = @prev_end_date,
			PROLONGATION_COUNT = CASE WHEN ISNULL(PROLONGATION_COUNT, 0) = 1 THEN NULL ELSE ISNULL(PROLONGATION_COUNT, 0) - 1 END
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
	END

	SELECT @acc_client_no = CLIENT_NO
	FROM dbo.ACCOUNTS (NOLOCK)
	WHERE ACC_ID=@depo_acc_id
	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)		
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
		
		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR INSERT ACCOUNT CRED PERC ARC', 16, 1); RETURN (1); END

		UPDATE CP WITH (ROWLOCK, UPDLOCK)
		SET CP.END_DATE = V.END_DATE,
			CP.FORMULA = V.FORMULA
		FROM dbo.ACCOUNTS_CRED_PERC CP
			INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_PROLONGATION_INTRATE_CHANGE V ON CP.ACC_ID = V.ACC_ID
		WHERE V.OP_ID = @op_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END
	END
	
	SELECT @acc_client_no = CLIENT_NO
	FROM dbo.ACCOUNTS (NOLOCK)
	WHERE ACC_ID=@accrual_acc_id
	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@accrual_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @accrual_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @accrual_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END

	SELECT @acc_client_no = CLIENT_NO
	FROM dbo.ACCOUNTS (NOLOCK)
	WHERE ACC_ID=@loss_acc_id
	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@loss_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @loss_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @loss_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END

	IF @interest_realize_adv_acc_id IS NULL	
		SET @acc_client_no=NULL
	ELSE
	BEGIN
		SELECT @acc_client_no = CLIENT_NO
		FROM dbo.ACCOUNTS (NOLOCK)
		WHERE ACC_ID=@interest_realize_adv_acc_id
	END

	IF (@acc_client_no IS NOT NULL) AND (@acc_client_no = @client_no)
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@interest_realize_adv_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID PERIOD (ÀÍÀÁÒÉÓ ÐÒÏËÏÍÂÀÝÉÉÓ ÂÀÖØÌÄÁÀ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @interest_realize_adv_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR INSERT ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1,
			PERIOD = @prev_end_date
		WHERE ACC_ID = @interest_realize_adv_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END
	IF @recalculate_schedule = 1
	BEGIN	
		DELETE FROM dbo.DEPO_SCHEDULE WITH (ROWLOCK)
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETE DEPO SCHEDULE</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.DEPO_SCHEDULE
		(DEPO_ID, SCHEDULE_DATE, PAYMENT, PRINCIPAL, INTEREST, INTEREST_TAX, TAX, BALANCE)
		SELECT DEPO_ID, SCHEDULE_DATE, PAYMENT, PRINCIPAL, INTEREST, INTEREST_TAX, TAX, BALANCE
		FROM dbo.DEPO_SCHEDULE_ARC (NOLOCK)
		WHERE OP_ID = @op_id AND DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPO SCHEDULE</ERR>', 16, 1); RETURN (1); END

		DELETE FROM dbo.DEPO_SCHEDULE_ARC WITH (ROWLOCK)
		WHERE OP_ID = @op_id AND DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETE DEPO SCHEDULE ARC</ERR>', 16, 1); RETURN (1); END											
	END	
END
ELSE
IF @op_type = dbo.depo_fn_const_op_mark2default()
BEGIN
	DECLARE
		@deposit_default bit
		
	SELECT @deposit_default = DEPOSIT_DEFAULT
	FROM dbo.DEPO_VW_OP_DATA_MARK2DEFAULT
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END
		
	SET @deposit_default = ~@deposit_default
	
	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET DEPOSIT_DEFAULT = @deposit_default  
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_mark2default_change_intrate_schema()
BEGIN
	DECLARE
		@prev_intrate money,
		@prev_real_intrate money,
		@prev_intrate_schema int,
		@prev_depo_formula varchar(255),
		@prev_acp_formula varchar(255)
		
	SELECT @prev_intrate = PREV_INTRATE, @prev_real_intrate = PREV_REAL_INTRATE, @prev_intrate_schema = PREV_INTRATE_SCHEMA, 
		   @prev_depo_formula = PREV_DEPO_FORMULA, @prev_acp_formula = PREV_ACP_FORMULA
	FROM dbo.DEPO_VW_OP_DATA_MARK2DEFAULT_CHANGE_INTRATE_SCHEMA
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('ERROR OP DATA NOT FOUND!', 16, 1); RETURN (1); END
	
	UPDATE dbo.DEPO_DEPOSITS WITH(UPDLOCK)
	SET INTRATE = @prev_intrate,
		REAL_INTRATE = @prev_real_intrate,
		INTRATE_SCHEMA = @prev_intrate_schema,
		FORMULA = @prev_depo_formula
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR CHANGE DEPOSIT DATA', 16, 1); RETURN (1); END
	
	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÆÄ ÐÉÒÏÁÉÓ ÃÀÒÙÅÄÅÉÓ ÂÀÌÏ ÓÀÐÒÏÝÄÍÔÏ ÂÀÍÀÊÅÄÈÉÓ ÓØÄÌÉÓ ÛÄÝÅËÀ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR UPDATE ACCOUNT CHANGES', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()

	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR UPDATE ACCOUNT ARC', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR UPDATE ACCOUNT DATA', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR UPDATE ACCOUNT CRED PERC ARC', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS_CRED_PERC WITH(UPDLOCK)
	SET FORMULA = @prev_acp_formula
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('ERROR CHANGE ACCOUNTS_CRED_PERC FORMULA', 16, 1); RETURN (1); END	
END
ELSE
IF @op_type = dbo.depo_fn_const_op_change_depo_realize_account()
BEGIN
	DECLARE
		@old_depo_realize_acc_id int,
		@change_interest_realize_acc bit

	SELECT @old_depo_realize_acc_id = OLD_DEPO_REALIZE_ACC_ID, @change_interest_realize_acc = CHANGE_INTEREST_REALIZE_ACC
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_DEPO_REALIZE_ACCOUNT
	WHERE OP_ID  = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET DEPO_REALIZE_ACC_ID = @old_depo_realize_acc_id
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT REALIZE ACCOUNT</ERR>', 16, 1); RETURN (1); END

	IF @change_interest_realize_acc = 1
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÃÀÒÉÝáÅÀ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
		SET CLIENT_ACCOUNT = @old_depo_realize_acc_id,
			INTEREST_REALIZE_ACC_ID = @old_depo_realize_acc_id
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
		SET INTEREST_REALIZE_ACC_ID = @old_depo_realize_acc_id
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING INTEREST REALIZE ACCOUNT</ERR>', 16, 1); RETURN (1); END
	END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_change_interest_realize_account()
BEGIN

	DECLARE
		@old_interest_realize_acc_id int

	SELECT @old_interest_realize_acc_id = OLD_INTEREST_REALIZE_ACC_ID
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_INTEREST_REALIZE_ACCOUNT
	WHERE OP_ID  = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID ÃÀÒÉÝáÅÀ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
	SET CLIENT_ACCOUNT = @old_interest_realize_acc_id,
		INTEREST_REALIZE_ACC_ID = @old_interest_realize_acc_id
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET INTEREST_REALIZE_ACC_ID = @old_interest_realize_acc_id
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATING DEPOSIT REALIZE ACCOUNT</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_shareable_change()
BEGIN
	UPDATE dbo.DEPO_DEPOSITS WITH(ROWLOCK, UPDLOCK)
	SET SHAREABLE = 0, 
		SHARED_CONTROL_CLIENT_NO = NULL, 
		SHARED_CONTROL = 0
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR UPDATE DEPOSITS!</ERR>', 16, 1); RETURN (1); END	
END
ELSE
IF @op_type = dbo.depo_fn_const_op_renew()
BEGIN
	DECLARE 
		@generate_new_schedule bit,
		@acc_change_descrip varchar(300)

	SELECT  @generate_new_schedule = GENERATE_NEW_SCHEDULE,
			@prev_end_date = PREV_END_DATE
	FROM dbo.DEPO_VW_OP_DATA_RENEW
	WHERE OP_ID  = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR OP DATA NOT FOUND!</ERR>', 16, 1); RETURN (1); END

	SET @acc_change_descrip = 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID' --DESCRIP-ის დაგენერირება
	IF @end_date = 1
	BEGIN
		SET @acc_change_descrip = @acc_change_descrip + ' PERIOD'
		IF ISNULL(@spend_amount, $0.00) <> $0.00
			SET @acc_change_descrip = @acc_change_descrip + ' MIN_AMOUNT_CHECK_DATE'
	END
	SET @acc_change_descrip = @acc_change_descrip + ' (ÀÍÀÁÒÉÓ ÂÀÍÀáËÄÁÀ)'

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, @acc_change_descrip)
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)--ACCOUNT-ის შეცვლა
	SET [UID] = [UID] + 1,
		PERIOD = CASE WHEN @end_date IS NOT NULL THEN @prev_end_date ELSE PERIOD END,
		MIN_AMOUNT_CHECK_DATE = CASE WHEN ISNULL(@spend_amount, $0.00) <> $0.00 THEN @prev_end_date ELSE MIN_AMOUNT_CHECK_DATE END
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE CP WITH (ROWLOCK, UPDLOCK)
	SET CP.[START_DATE] = V.[START_DATE]
		,CP.END_DATE = V.END_DATE
		,CP.MOVE_COUNT = V.MOVE_COUNT
		,CP.MOVE_COUNT_TYPE = V.MOVE_COUNT_TYPE
		,CP.CALC_TYPE = V.CALC_TYPE
		,CP.FORMULA = V.FORMULA
		,CP.CLIENT_ACCOUNT = V.CLIENT_ACCOUNT
		,CP.PERC_CLIENT_ACCOUNT = V.PERC_CLIENT_ACCOUNT
		,CP.PERC_BANK_ACCOUNT = V.PERC_BANK_ACCOUNT
		,CP.DAYS_IN_YEAR = V.DAYS_IN_YEAR
		,CP.CALC_AMOUNT = V.CALC_AMOUNT
		,CP.TOTAL_CALC_AMOUNT = V.TOTAL_CALC_AMOUNT
		,CP.TOTAL_PAYED_AMOUNT = V.TOTAL_PAYED_AMOUNT
		,CP.LAST_CALC_DATE = V.LAST_CALC_DATE
		,CP.LAST_MOVE_DATE = V.LAST_MOVE_DATE
		,CP.PERC_FLAGS = V.PERC_FLAGS
		,CP.PERC_TYPE = V.PERC_TYPE
		,CP.TAX_RATE = V.TAX_RATE
		,CP.START_DATE_TYPE = V.START_DATE_TYPE
		,CP.START_DATE_DAYS = V.START_DATE_DAYS
		,CP.DATE_TYPE = V.DATE_TYPE
		,CP.DEPO_ID = V.DEPO_ID
		,CP.RECALCULATE_TYPE = V.RECALCULATE_TYPE
		,CP.DEPO_REALIZE_ACC_ID = V.DEPO_REALIZE_ACC_ID
		,CP.INTEREST_REALIZE_ACC_ID = V.INTEREST_REALIZE_ACC_ID
		,CP.DEPO_REALIZE_AMOUNT = V.DEPO_REALIZE_AMOUNT
		,CP.INTEREST_REALIZE_AMOUNT = V.INTEREST_REALIZE_AMOUNT
		,CP.ADVANCE_ACC_ID = V.ADVANCE_ACC_ID
		,CP.ADVANCE_AMOUNT = V.ADVANCE_AMOUNT
		,CP.MIN_PROCESSING_DATE = V.MIN_PROCESSING_DATE
		,CP.MIN_PROCESSING_TOTAL_CALC_AMOUNT = V.MIN_PROCESSING_TOTAL_CALC_AMOUNT
		,CP.TOTAL_TAX_PAYED_AMOUNT = V.TOTAL_TAX_PAYED_AMOUNT
		,CP.TOTAL_TAX_PAYED_AMOUNT_EQU = V.TOTAL_TAX_PAYED_AMOUNT_EQU
	FROM dbo.ACCOUNTS_CRED_PERC CP
		INNER JOIN dbo.DEPO_VW_OP_ACC_DATA_RENEW V ON CP.ACC_ID = V.ACC_ID
	WHERE V.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	IF @generate_new_schedule = 1
	BEGIN
		DELETE FROM dbo.DEPO_SCHEDULE WITH (ROWLOCK)
		WHERE DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETE DEPO SCHEDULE</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.DEPO_SCHEDULE
		(DEPO_ID, SCHEDULE_DATE, PAYMENT, PRINCIPAL, INTEREST, INTEREST_TAX, TAX, BALANCE)
		SELECT DEPO_ID, SCHEDULE_DATE, PAYMENT, PRINCIPAL, INTEREST, INTEREST_TAX, TAX, BALANCE
		FROM dbo.DEPO_SCHEDULE_ARC (NOLOCK)
		WHERE OP_ID = @op_id AND DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE DEPO SCHEDULE</ERR>', 16, 1); RETURN (1); END

		DELETE FROM dbo.DEPO_SCHEDULE_ARC WITH (ROWLOCK)
		WHERE OP_ID = @op_id AND DEPO_ID = @depo_id
		IF @@ERROR <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETE DEPO SCHEDULE ARC</ERR>', 16, 1); RETURN (1); END											
	END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_convert()
BEGIN
	SELECT @depo_acc_id = DEPO_ACC_ID, @loss_acc_id = LOSS_ACC_ID, @accrual_acc_id = ACCRUAL_ACC_ID
	FROM dbo.DEPO_DEPOSITS
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>DEPOSIT NOT FOUND</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_change_officer()
BEGIN
	DECLARE @old_responsible_user_id int

	SELECT @old_responsible_user_id = OLD_RESPONSIBLE_USER_ID
	FROM dbo.DEPO_VW_OP_DATA_CHANGE_OFFICER
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END  

	UPDATE dbo.DEPO_DEPOSITS
	SET RESPONSIBLE_USER_ID = @old_responsible_user_id
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_block_amount()
BEGIN
	DECLARE
		@depo_acc_block_id int
		
	SELECT @depo_acc_block_id = BLOCK_ID
	FROM dbo.DEPO_VW_OP_DATA_BLOCK_AMOUNT
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>DEPO ACTIVE DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

	EXEC @r = dbo.acc_unblock_amount_by_id
		@acc_id = @depo_acc_id,
		@block_id = @depo_acc_block_id,
		@user_id = @user_id,
		@doc_rec_id = NULL

	IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ÛÄÝÃÏÌÀ ÀÍÀÁÀÒÆÄ ÈÀÍáÉÓ ÂÀÍÁËÏÊÅÉÓÀÓ!</ERR>', 16, 1); RETURN (1); END

	SET @depo_acc_block_id = 0
	SET @op_data.modify('replace value of (//@BLOCK_ID)[1] with sql:variable("@depo_acc_block_id")')

	UPDATE dbo.DEPO_OP WITH (ROWLOCK, UPDLOCK)
	SET OP_DATA = @op_data
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE OP DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_clear_block_amount()
BEGIN
	DECLARE
		@depo_acc_clear_block_id int

	SELECT @depo_acc_clear_block_id = BLOCK_ID
	FROM dbo.DEPO_VW_OP_DATA_CLEAR_BLOCK_AMOUNT
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>DEPO ACTIVE DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END


	EXEC @r = dbo.acc_block_revert_by_id
		@acc_id = @depo_acc_id,
		@user_id = @user_id,
		@block_id = @depo_acc_clear_block_id

	IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ÛÄÝÃÏÌÀ ÀÍÀÁÀÒÆÄ ÈÀÍáÉÓ ÂÀÍÁËÏÊÅÉÓÀÓ!</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_break_renew()
BEGIN
	SELECT @prolongable = PREV_PROLONGABLE, @renewable = PREV_RENEWABLE
	FROM dbo.DEPO_VW_OP_DATA_BREAK_RENEW
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END  

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET PROLONGABLE = @prolongable, RENEWABLE = @renewable
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_resume_renew()
BEGIN
	SELECT @prolongable = PREV_PROLONGABLE, @renewable = PREV_RENEWABLE
	FROM dbo.DEPO_VW_OP_DATA_RESUME_RENEW
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END  

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET PROLONGABLE = @prolongable, RENEWABLE = @renewable
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_allow_renew()
BEGIN
	SELECT 
		@renewable = PREV_RENEWABLE, 
		@renew_capitalized = PREV_RENEW_CAPITALIZED,		
		@renew_max = PREV_RENEW_MAX,
		@renew_count = PREV_RENEW_COUNT, 
		@renew_last_prod_id = PREV_RENEW_LAST_PROD_ID, 
		@last_renew_date = PREV_LAST_RENEW_DATE
	FROM dbo.DEPO_VW_OP_DATA_ALLOW_RENEW
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END  

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET RENEWABLE=@renewable,
		RENEW_CAPITALIZED = @renew_capitalized,
		RENEW_MAX = @renew_max,
		RENEW_COUNT = @renew_count,
		RENEW_LAST_PROD_ID = @renew_last_prod_id,
		LAST_RENEW_DATE = @last_renew_date
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type = dbo.depo_fn_const_op_allow_prolongation()
BEGIN
	SELECT  @prolongable = PREV_PROLONGABLE,
			@prolongation_count = PREV_PROLONGATION_COUNT
	FROM dbo.DEPO_VW_OP_DATA_ALLOW_PROLONGATION
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END  

	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET PROLONGABLE = @prolongable,
		PROLONGATION_COUNT = @prolongation_count
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END
END
ELSE
IF @op_type IN (dbo.depo_fn_const_op_annulment(), dbo.depo_fn_const_op_annulment_amount(), dbo.depo_fn_const_op_close_default())
BEGIN
	IF @op_type = dbo.depo_fn_const_op_annulment()
		SELECT @op_acc_arc_rec_id = ACC_ARC_REC_ID, @state = DEPO_PREV_STATE
		FROM dbo.DEPO_VW_OP_DATA_ANNULMENT
		WHERE OP_ID = @op_id
	ELSE
	IF @op_type = dbo.depo_fn_const_op_annulment_amount()
		SELECT @op_acc_arc_rec_id = ACC_ARC_REC_ID, @state = DEPO_PREV_STATE
		FROM dbo.DEPO_VW_OP_DATA_ANNULMENT_AMOUNT
		WHERE OP_ID = @op_id
	ELSE
	IF @op_type = dbo.depo_fn_const_op_close_default()
		SELECT @op_acc_arc_rec_id = ACC_ARC_REC_ID, @state = DEPO_PREV_STATE
		FROM dbo.DEPO_VW_OP_DATA_CLOSE_DEFAULT (NOLOCK)
		WHERE OP_ID = @op_id
	
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END
	
	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET [STATE] = @state, ANNULMENT_DATE = NULL
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END

	/*IF EXISTS(SELECT * FROM dbo.ACCOUNTS_CRED_PERC (NOLOCK) WHERE ACC_ID = @depo_acc_id) 
	BEGIN
		IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK;
		RAISERROR('ÀÍÀÁÒÉÓ ÀÍÂÀÒÉÛÆÄ ÃÀÊÀÅÛÉÒÄÁÖËÉÀ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ!', 16, 1) 
		RETURN (1)
	END*/ -- ÀÍÂÀÒÉÛÉÓ ÃÀáÖÒÅÉÓ ÃÒÏÓ ÀÒ ßÀÅÛÀËÏÈ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ

	SET @acc_changes = 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID'

	IF @op_type = dbo.depo_fn_const_op_annulment()
		SELECT @acc_arc_rec_id = ACC_ARC_REC_ID, @skip_realize = SKIP_REALIZE, @account_rec_state = ACCOUNT_REC_STATE, @account_date_close = ACCOUNT_DATE_CLOSE
		FROM dbo.DEPO_VW_OP_ACC_DATA_ANNULMENT
		WHERE OP_ID = @op_id
	ELSE
	IF @op_type = dbo.depo_fn_const_op_annulment_amount()
		SELECT @acc_arc_rec_id = ACC_ARC_REC_ID, @skip_realize = SKIP_REALIZE, @account_rec_state = ACCOUNT_REC_STATE, @account_date_close = ACCOUNT_DATE_CLOSE
		FROM dbo.DEPO_VW_OP_ACC_DATA_ANNULMENT_AMOUNT
		WHERE OP_ID = @op_id
	ELSE
	IF @op_type = dbo.depo_fn_const_op_close_default()
		SELECT @acc_arc_rec_id = ACC_ARC_REC_ID, @skip_realize = SKIP_REALIZE, @account_rec_state = ACCOUNT_REC_STATE, @account_date_close = ACCOUNT_DATE_CLOSE
		FROM dbo.DEPO_VW_OP_ACC_DATA_CLOSE_DEFAULT
		WHERE OP_ID = @op_id
		
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

	IF @skip_realize = 0
	BEGIN
		SELECT @account_rec_state2 = REC_STATE, @account_date_close2 = DATE_CLOSE
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>DEPO ACCOUNT NOT FOUND</ERR>', 16, 1); RETURN (1); END

		IF ISNULL(@account_rec_state, 0) <> ISNULL(@account_rec_state2, 0)
			SET @acc_changes = @acc_changes + ' REC_STATE'

		IF ISNULL(@account_date_close, convert(smalldatetime, '19000101')) <> ISNULL(@account_date_close2, convert(smalldatetime, '19000101'))
			SET @acc_changes = @acc_changes + ' DATE_CLOSE'

		--SET @acc_changes = @acc_changes + ' ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÓ ÃÀáÖÒÅÉÓ ÂÀÖØÌÄÁÀ)'-- ÀÍÂÀÒÉÛÉÓ ÃÀáÖÒÅÉÓ ÃÒÏÓ ÀÒ ßÀÅÛÀËÏÈ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ
	END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, @acc_changes)
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()

	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	IF @skip_realize = 0
	BEGIN 
		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1, REC_STATE = @account_rec_state, DATE_CLOSE = @account_date_close
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END
	ELSE
	BEGIN 
		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END

	/*INSERT INTO dbo.ACCOUNTS_CRED_PERC (ACC_ID, [START_DATE], END_DATE, MOVE_COUNT, MOVE_COUNT_TYPE, CALC_TYPE, FORMULA, CLIENT_ACCOUNT, PERC_CLIENT_ACCOUNT, PERC_BANK_ACCOUNT,
		DAYS_IN_YEAR, CALC_AMOUNT, TOTAL_CALC_AMOUNT, TOTAL_PAYED_AMOUNT, LAST_CALC_DATE, LAST_MOVE_DATE, PERC_FLAGS, PERC_TYPE, TAX_RATE, START_DATE_TYPE, START_DATE_DAYS, DATE_TYPE,
		DEPO_ID, RECALCULATE_TYPE, DEPO_REALIZE_ACC_ID, INTEREST_REALIZE_ACC_ID, DEPO_REALIZE_AMOUNT, INTEREST_REALIZE_AMOUNT, ADVANCE_ACC_ID, ADVANCE_AMOUNT, MIN_PROCESSING_DATE, MIN_PROCESSING_TOTAL_CALC_AMOUNT)
	SELECT ACC_ID, [START_DATE], END_DATE, MOVE_COUNT, MOVE_COUNT_TYPE, CALC_TYPE, FORMULA, CLIENT_ACCOUNT, PERC_CLIENT_ACCOUNT, PERC_BANK_ACCOUNT,
		DAYS_IN_YEAR, CALC_AMOUNT, TOTAL_CALC_AMOUNT, TOTAL_PAYED_AMOUNT, LAST_CALC_DATE, LAST_MOVE_DATE, PERC_FLAGS, PERC_TYPE, TAX_RATE, START_DATE_TYPE, START_DATE_DAYS, DATE_TYPE,
		DEPO_ID, RECALCULATE_TYPE, DEPO_REALIZE_ACC_ID, INTEREST_REALIZE_ACC_ID, DEPO_REALIZE_AMOUNT, INTEREST_REALIZE_AMOUNT, ADVANCE_ACC_ID, ADVANCE_AMOUNT, MIN_PROCESSING_DATE, MIN_PROCESSING_TOTAL_CALC_AMOUNT
	FROM dbo.ACCOUNTS_CRED_PERC_ARC
	WHERE REC_ID = @acc_arc_rec_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END
	*/ -- ÀÍÂÀÒÉÛÉÓ ÃÀáÖÒÅÉÓ ÃÒÏÓ ÀÒ ßÀÅÛÀËÏÈ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ

	EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @depo_acc_id, @user_id
	IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
	
	IF ISNULL(@op_acc_arc_rec_id, 0) <> 0
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID MIN_AMOUNT MIN_AMOUNT_NEW MIN_AMOUNT_CHECK_DATE')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()

		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END
		
		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END
		
		UPDATE A WITH (ROWLOCK, UPDLOCK) 
		SET A.[UID] = A.[UID] + 1,
			A.MIN_AMOUNT = C.MIN_AMOUNT,
			A.MIN_AMOUNT_NEW = C.MIN_AMOUNT_NEW,
			A.MIN_AMOUNT_CHECK_DATE = C.MIN_AMOUNT_CHECK_DATE
		FROM dbo.ACCOUNTS A 
			INNER JOIN dbo.ACCOUNTS_ARC C (NOLOCK) ON A.ACC_ID = C.ACC_ID
		WHERE C.REC_ID = @op_acc_arc_rec_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
		
		UPDATE C WITH (ROWLOCK, UPDLOCK)
		SET C.END_DATE = A.END_DATE
		FROM dbo.ACCOUNTS_CRED_PERC C
			INNER JOIN dbo.ACCOUNTS_CRED_PERC_ARC A ON C.ACC_ID = A.ACC_ID
		WHERE A.REC_ID = @op_acc_arc_rec_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

		SET @op_data.modify('replace value of (//@ACC_ARC_REC_ID)[1] with "0"')

		UPDATE dbo.DEPO_OP WITH (ROWLOCK, UPDLOCK)
		SET OP_DATA = @op_data
		WHERE OP_ID = @op_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE OP DATA</ERR>', 16, 1); RETURN (1); END

		EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @depo_acc_id, @user_id
		IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
	END
END
ELSE
IF @op_type IN (dbo.depo_fn_const_op_close(), dbo.depo_fn_const_op_annulment_positive())
BEGIN
	IF @op_type = dbo.depo_fn_const_op_close()
		SELECT @op_acc_arc_rec_id = ACC_ARC_REC_ID, @state = DEPO_PREV_STATE
		FROM dbo.DEPO_VW_OP_DATA_CLOSE
		WHERE OP_ID = @op_id
	ELSE	
	IF @op_type = dbo.depo_fn_const_op_annulment_positive()
		SELECT @op_acc_arc_rec_id = ACC_ARC_REC_ID, @state = DEPO_PREV_STATE
		FROM dbo.DEPO_VW_OP_DATA_ANNULMENT_POSITIVE
		WHERE OP_ID = @op_id
	
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END
	
	UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
	SET [STATE] = @state, ANNULMENT_DATE = NULL
	WHERE DEPO_ID = @depo_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END

	/*IF EXISTS(SELECT * FROM dbo.ACCOUNTS_CRED_PERC (NOLOCK) WHERE ACC_ID = @depo_acc_id) 
	BEGIN
		IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK;
		RAISERROR('ÀÍÀÁÒÉÓ ÀÍÂÀÒÉÛÆÄ ÃÀÊÀÅÛÉÒÄÁÖËÉÀ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ!', 16, 1) 
		RETURN (1)
	END*/ -- ÀÍÂÀÒÉÛÉÓ ÃÀáÖÒÅÉÓ ÃÒÏÓ ÀÒ ßÀÅÛÀËÏÈ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ

	SET @acc_changes = 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID'

	IF @op_type = dbo.depo_fn_const_op_close()
		SELECT @acc_arc_rec_id = ACC_ARC_REC_ID, @skip_realize = SKIP_REALIZE, @account_rec_state = ACCOUNT_REC_STATE, @account_date_close = ACCOUNT_DATE_CLOSE
		FROM dbo.DEPO_VW_OP_ACC_DATA_CLOSE
		WHERE OP_ID = @op_id
	ELSE
	IF @op_type = dbo.depo_fn_const_op_annulment_positive()
		SELECT @acc_arc_rec_id = ACC_ARC_REC_ID, @skip_realize = SKIP_REALIZE, @account_rec_state = ACCOUNT_REC_STATE, @account_date_close = ACCOUNT_DATE_CLOSE
		FROM dbo.DEPO_VW_OP_ACC_DATA_ANNULMENT_POSITIVE
		WHERE OP_ID = @op_id
		
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

	IF @skip_realize = 0
	BEGIN
		SELECT @account_rec_state2 = REC_STATE, @account_date_close2 = DATE_CLOSE
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>DEPO ACCOUNT NOT FOUND</ERR>', 16, 1); RETURN (1); END

		IF ISNULL(@account_rec_state, 0) <> ISNULL(@account_rec_state2, 0)
			SET @acc_changes = @acc_changes + ' REC_STATE'

		IF ISNULL(@account_date_close, convert(smalldatetime, '19000101')) <> ISNULL(@account_date_close2, convert(smalldatetime, '19000101'))
			SET @acc_changes = @acc_changes + ' DATE_CLOSE'

		--SET @acc_changes = @acc_changes + ' ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÓ ÃÀáÖÒÅÉÓ ÂÀÖØÌÄÁÀ)'-- ÀÍÂÀÒÉÛÉÓ ÃÀáÖÒÅÉÓ ÃÒÏÓ ÀÒ ßÀÅÛÀËÏÈ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ
	END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@depo_acc_id, @user_id, @acc_changes)
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()

	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	IF @skip_realize = 0
	BEGIN 
		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1, REC_STATE = @account_rec_state, DATE_CLOSE = @account_date_close
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END
	ELSE
	BEGIN 
		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
	END

	/*INSERT INTO dbo.ACCOUNTS_CRED_PERC (ACC_ID, [START_DATE], END_DATE, MOVE_COUNT, MOVE_COUNT_TYPE, CALC_TYPE, FORMULA, CLIENT_ACCOUNT, PERC_CLIENT_ACCOUNT, PERC_BANK_ACCOUNT,
		DAYS_IN_YEAR, CALC_AMOUNT, TOTAL_CALC_AMOUNT, TOTAL_PAYED_AMOUNT, LAST_CALC_DATE, LAST_MOVE_DATE, PERC_FLAGS, PERC_TYPE, TAX_RATE, START_DATE_TYPE, START_DATE_DAYS, DATE_TYPE,
		DEPO_ID, RECALCULATE_TYPE, DEPO_REALIZE_ACC_ID, INTEREST_REALIZE_ACC_ID, DEPO_REALIZE_AMOUNT, INTEREST_REALIZE_AMOUNT, ADVANCE_ACC_ID, ADVANCE_AMOUNT, MIN_PROCESSING_DATE, MIN_PROCESSING_TOTAL_CALC_AMOUNT)
	SELECT ACC_ID, [START_DATE], END_DATE, MOVE_COUNT, MOVE_COUNT_TYPE, CALC_TYPE, FORMULA, CLIENT_ACCOUNT, PERC_CLIENT_ACCOUNT, PERC_BANK_ACCOUNT,
		DAYS_IN_YEAR, CALC_AMOUNT, TOTAL_CALC_AMOUNT, TOTAL_PAYED_AMOUNT, LAST_CALC_DATE, LAST_MOVE_DATE, PERC_FLAGS, PERC_TYPE, TAX_RATE, START_DATE_TYPE, START_DATE_DAYS, DATE_TYPE,
		DEPO_ID, RECALCULATE_TYPE, DEPO_REALIZE_ACC_ID, INTEREST_REALIZE_ACC_ID, DEPO_REALIZE_AMOUNT, INTEREST_REALIZE_AMOUNT, ADVANCE_ACC_ID, ADVANCE_AMOUNT, MIN_PROCESSING_DATE, MIN_PROCESSING_TOTAL_CALC_AMOUNT
	FROM dbo.ACCOUNTS_CRED_PERC_ARC
	WHERE REC_ID = @acc_arc_rec_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END
	*/ -- ÀÍÂÀÒÉÛÉÓ ÃÀáÖÒÅÉÓ ÃÒÏÓ ÀÒ ßÀÅÛÀËÏÈ ÊÒÄÃÉÔÖË ÍÀÛÈÆÄ ÃÀÒÉÝáÅÉÓ ÓØÄÌÀ

	EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @depo_acc_id, @user_id
	IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
	
	IF ISNULL(@op_acc_arc_rec_id, 0) <> 0
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID MIN_AMOUNT MIN_AMOUNT_NEW MIN_AMOUNT_CHECK_DATE')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()

		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END
		
		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END
		
		UPDATE A WITH (ROWLOCK, UPDLOCK) 
		SET A.[UID] = A.[UID] + 1,
			A.MIN_AMOUNT = C.MIN_AMOUNT,
			A.MIN_AMOUNT_NEW = C.MIN_AMOUNT_NEW,
			A.MIN_AMOUNT_CHECK_DATE = C.MIN_AMOUNT_CHECK_DATE
		FROM dbo.ACCOUNTS A 
			INNER JOIN dbo.ACCOUNTS_ARC C (NOLOCK) ON A.ACC_ID = C.ACC_ID
		WHERE C.REC_ID = @op_acc_arc_rec_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END
		
		UPDATE C WITH (ROWLOCK, UPDLOCK)
		SET C.END_DATE = A.END_DATE
		FROM dbo.ACCOUNTS_CRED_PERC C
			INNER JOIN dbo.ACCOUNTS_CRED_PERC_ARC A ON C.ACC_ID = A.ACC_ID
		WHERE A.REC_ID = @op_acc_arc_rec_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

		SET @op_data.modify('replace value of (//@ACC_ARC_REC_ID)[1] with "0"')

		UPDATE dbo.DEPO_OP WITH (ROWLOCK, UPDLOCK)
		SET OP_DATA = @op_data
		WHERE OP_ID = @op_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE OP DATA</ERR>', 16, 1); RETURN (1); END

		EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @depo_acc_id, @user_id
		IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
	END
END

SET @op_docs_deleted = 0
SET @accrue_docs_deleted = 0

EXEC @r = dbo.depo_sp_delete_exec_op_accounting @doc_rec_id = @doc_rec_id, @accrue_doc_rec_id = @accrue_doc_rec_id, @user_id = @user_id, @op_id = @op_id, @op_docs_deleted = @op_docs_deleted OUTPUT, @accrue_docs_deleted = @accrue_docs_deleted OUTPUT
IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR EXECUTE ACCOUNTING</ERR>', 16, 1); RETURN (1); END

DECLARE
	@archive_deposit bit

SELECT @archive_deposit = ISNULL(ARCHIVE_DEPOSIT, convert(bit, 0))
FROM dbo.DEPO_VW_OP_DATA_COMMON
WHERE OP_ID = @op_id

IF @archive_deposit = 1
BEGIN
	UPDATE D WITH (ROWLOCK, UPDLOCK)
	SET  D.BRANCH_ID = H.BRANCH_ID
		,D.DEPT_NO = H.DEPT_NO
		,D.STATE = H.STATE
		,D.ALARM_STATE = H.ALARM_STATE
		,D.CLIENT_NO = H.CLIENT_NO
		,D.TRUST_DEPOSIT = H.TRUST_DEPOSIT
		,D.TRUST_CLIENT_NO = H.TRUST_CLIENT_NO
		,D.TRUST_EXTRA_INFO = H.TRUST_EXTRA_INFO
		,D.PROD_ID = H.PROD_ID
		,D.AGREEMENT_NO = H.AGREEMENT_NO
		,D.DEPO_TYPE = H.DEPO_TYPE
		,D.DEPO_ACC_SUBTYPE = H.DEPO_ACC_SUBTYPE
		,D.DEPO_ACCOUNT_STATE = H.DEPO_ACCOUNT_STATE
		,D.ISO = H.ISO
		,D.AGREEMENT_AMOUNT = H.AGREEMENT_AMOUNT
		,D.AMOUNT = H.AMOUNT
		,D.DATE_TYPE = H.DATE_TYPE
		,D.PERIOD = H.PERIOD
		,D.START_DATE = H.START_DATE
		,D.END_DATE = H.END_DATE
		,D.ANNULMENT_DATE = H.ANNULMENT_DATE
		,D.INTRATE = H.INTRATE
		,D.REAL_INTRATE = H.REAL_INTRATE
		,D.PERC_FLAGS = H.PERC_FLAGS
		,D.DAYS_IN_YEAR = H.DAYS_IN_YEAR
		,D.PROD_ACCRUE_MIN = H.PROD_ACCRUE_MIN
		,D.PROD_ACCRUE_MAX = H.PROD_ACCRUE_MAX
		,D.PROD_SPEND_MIN = H.PROD_SPEND_MIN
		,D.PROD_SPEND_MAX = H.PROD_SPEND_MAX
		,D.FORMULA = H.FORMULA
		,D.INTRATE_SCHEMA = H.INTRATE_SCHEMA
		,D.ACCRUE_TYPE = H.ACCRUE_TYPE
		,D.RECALCULATE_TYPE = H.RECALCULATE_TYPE
		,D.REALIZE_SCHEMA = H.REALIZE_SCHEMA
		,D.REALIZE_TYPE = H.REALIZE_TYPE
		,D.REALIZE_COUNT = H.REALIZE_COUNT
		,D.REALIZE_COUNT_TYPE = H.REALIZE_COUNT_TYPE
		,D.DEPO_REALIZE_SCHEMA = H.DEPO_REALIZE_SCHEMA
		,D.DEPO_REALIZE_SCHEMA_AMOUNT = H.DEPO_REALIZE_SCHEMA_AMOUNT
		,D.CONVERTIBLE = H.CONVERTIBLE
		,D.PROLONGABLE = H.PROLONGABLE
		,D.PROLONGATION_COUNT = H.PROLONGATION_COUNT
		,D.RENEWABLE = H.RENEWABLE
		,D.RENEW_CAPITALIZED = H.RENEW_CAPITALIZED
		,D.RENEW_MAX = H.RENEW_MAX
		,D.RENEW_COUNT = H.RENEW_COUNT
		,D.RENEW_LAST_PROD_ID = H.RENEW_LAST_PROD_ID
		,D.LAST_RENEW_DATE = H.LAST_RENEW_DATE
		,D.SHAREABLE = H.SHAREABLE
		,D.SHARED_CONTROL_CLIENT_NO = H.SHARED_CONTROL_CLIENT_NO
		,D.SHARED_CONTROL = H.SHARED_CONTROL
		,D.REVISION_SCHEMA = H.REVISION_SCHEMA
		,D.REVISION_TYPE = H.REVISION_TYPE
		,D.REVISION_COUNT = H.REVISION_COUNT
		,D.REVISION_COUNT_TYPE = H.REVISION_COUNT_TYPE
		,D.REVISION_GRACE_ITEMS = H.REVISION_GRACE_ITEMS
		,D.REVISION_GRACE_DATE_TYPE = H.REVISION_GRACE_DATE_TYPE
		,D.ANNULMENTED = H.ANNULMENTED
		,D.ANNULMENT_REALIZE = H.ANNULMENT_REALIZE
		,D.ANNULMENT_SCHEMA = H.ANNULMENT_SCHEMA
		,D.ANNULMENT_SCHEMA_ADVANCE = H.ANNULMENT_SCHEMA_ADVANCE
		,D.INTEREST_REALIZE_ADV = H.INTEREST_REALIZE_ADV
		,D.INTEREST_REALIZE_ADV_AMOUNT = H.INTEREST_REALIZE_ADV_AMOUNT
		,D.CHILD_DEPOSIT = H.CHILD_DEPOSIT
		,D.CHILD_CONTROL_OWNER = H.CHILD_CONTROL_OWNER
		,D.CHILD_CONTROL_CLIENT_NO_1 = H.CHILD_CONTROL_CLIENT_NO_1
		,D.CHILD_CONTROL_CLIENT_NO_2 = H.CHILD_CONTROL_CLIENT_NO_2
		,D.ACCUMULATIVE = H.ACCUMULATIVE
		,D.ACCUMULATE_PRODUCT = H.ACCUMULATE_PRODUCT
		,D.ACCUMULATE_MIN = H.ACCUMULATE_MIN
		,D.ACCUMULATE_MAX = H.ACCUMULATE_MAX
		,D.ACCUMULATE_AMOUNT = H.ACCUMULATE_AMOUNT
		,D.ACCUMULATE_MAX_AMOUNT = H.ACCUMULATE_MAX_AMOUNT
		,D.ACCUMULATE_MAX_AMOUNT_LIMIT = H.ACCUMULATE_MAX_AMOUNT_LIMIT
		,D.ACCUMULATE_SCHEMA_INTRATE = H.ACCUMULATE_SCHEMA_INTRATE
		,D.SPEND = H.SPEND
		,D.SPEND_INTRATE = H.SPEND_INTRATE
		,D.SPEND_AMOUNT = H.SPEND_AMOUNT
		,D.SPEND_AMOUNT_INTRATE = H.SPEND_AMOUNT_INTRATE
		,D.SPEND_CONST_AMOUNT = H.SPEND_CONST_AMOUNT
		,D.DEPO_REALIZE_TYPE = H.DEPO_REALIZE_TYPE
		,D.CREDITCARD_BALANCE_CHECK = H.CREDITCARD_BALANCE_CHECK
		,D.INTEREST_REALIZE_TYPE = H.INTEREST_REALIZE_TYPE
		,D.DEPO_FILL_ACC_ID = H.DEPO_FILL_ACC_ID
		,D.DEPO_ACC_ID = H.DEPO_ACC_ID
		,D.LOSS_ACC_ID = H.LOSS_ACC_ID
		,D.ACCRUAL_ACC_ID = H.ACCRUAL_ACC_ID
		,D.DEPO_REALIZE_ACC_ID = H.DEPO_REALIZE_ACC_ID
		,D.INTEREST_REALIZE_ACC_ID = H.INTEREST_REALIZE_ACC_ID
		,D.INTEREST_REALIZE_ADV_ACC_ID = H.INTEREST_REALIZE_ADV_ACC_ID
		,D.RESPONSIBLE_USER_ID = H.RESPONSIBLE_USER_ID
		,D.DEPO_NOTE = H.DEPO_NOTE
		,D.ALARM_NOTE = H.ALARM_NOTE
		,D.DEPOSIT_DEFAULT = H.DEPOSIT_DEFAULT
	FROM dbo.DEPO_DEPOSITS D INNER JOIN
		dbo.DEPO_DEPOSITS_HISTORY H ON D.DEPO_ID = H.DEPO_ID
	WHERE H.OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR RESTORE DEPOSIT!</ERR>', 16, 1); RETURN (1); END

	DELETE FROM dbo.DEPO_DEPOSITS_HISTORY WITH (ROWLOCK)
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR: DELETE ARCHIVED DEPOSIT DATA!</ERR>', 16, 1); RETURN (1); END
END

IF @op_type = dbo.depo_fn_const_op_convert()
BEGIN
	SET @saldo_date = '20790101'
	SET @shadow_level = 0

	DECLARE		
		@acc_date_open smalldatetime
		
	SET @acc_client_no = NULL
	SET @acc_date_open = NULL

	SELECT @acc_client_no = CLIENT_NO, @acc_date_open = DATE_OPEN
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DEPO ACCOUNT NOT FOUND</ERR>', 16, 1); RETURN (1); END

	DECLARE
		@calc_amount_1 money,
		@total_calc_amount_1 money,
		@last_calc_date_1 smalldatetime,
		@min_processing_date_1 smalldatetime,
		@min_processing_total_calc_amount_1 money,
		@formula_2 varchar(255),
		@calc_amount_2 money,
		@total_calc_amount_2 money,
		@last_calc_date_2 smalldatetime,
		@min_processing_date_2 smalldatetime,
		@min_processing_total_calc_amount_2 money

	SELECT @calc_amount_1 = CALC_AMOUNT_1, @total_calc_amount_1 = TOTAL_CALC_AMOUNT_1,
		@min_processing_date_1 = MIN_PROCESSING_DATE_1, @min_processing_total_calc_amount_1 = MIN_PROCESSING_TOTAL_CALC_AMOUNT_1,
		@formula_2 = FORMULA_2, @calc_amount_2 = CALC_AMOUNT_2, @total_calc_amount_2 = TOTAL_CALC_AMOUNT_2, @last_calc_date_2 = LAST_CALC_DATE_2,
		@min_processing_date_2 = MIN_PROCESSING_DATE_2, @min_processing_total_calc_amount_2 = MIN_PROCESSING_TOTAL_CALC_AMOUNT_2
	FROM dbo.DEPO_VW_OP_ACC_DATA_CONVERT
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

	DECLARE
		@depo_account_deleted bit,
		@depo_acc_close_del int,
		@delete_account bit

	SET @depo_account_deleted = 0

	EXEC @r = dbo.GET_SETTING_INT 'DEPO_ACC_CLOSE_DEL', @depo_acc_close_del OUTPUT
	IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR REAGING SETTING</ERR>' , 16, 1); RETURN (1); END

	IF @acc_client_no IS NOT NULL AND @acc_client_no = @client_no AND @acc_date_open = @op_date
	BEGIN

		IF @depo_acc_close_del = 0
			SET @delete_account = 1
		ELSE 
			SET @delete_account = 0
			
		EXEC @r = dbo.depo_sp_delete_depo_account
			@acc_id = @depo_acc_id,
			@delete_account = @delete_account
		IF @@ERROR <> 0 OR (@r NOT IN (0, 1, 2, 3)) BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETING ACCOUNT (DEPOSIT)!</ERR>', 16, 1); RETURN (1); END

		IF @r = 1
		BEGIN
			IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; 
			RAISERROR ('<ERR>ÓÀÀÍÀÁÒÄ ÀÍÂÀÒÉÛÆÄ ÀÒÉÓ ÀÒÀÍÖËÏÅÀÍÉ ÍÀÛÈÉ, ÀÍÂÀÒÉÛÉÓ ßÀÛËÀ ÛÄÖÞËÄÁÄËÉÀ!</ERR>', 16, 1)
			RETURN (1)
		END

		IF @depo_acc_close_del = 0 AND @r = 0
			SET @depo_account_deleted = 1
	END

	IF @depo_account_deleted = 0
	BEGIN
		INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
		VALUES (@depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID REC_STATE ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÓ ÊÏÍÅÄÒÔÀÝÉÀ ÓáÅÀ ÅÀËÖÔÀÛÉ)')
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

		SET @rec_id = SCOPE_IDENTITY()
		
		INSERT INTO dbo.ACCOUNTS_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
		SET [UID] = [UID] + 1, REC_STATE = 16 --ÂÀÚÉÍÖËÉ
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

		INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
		SELECT @rec_id, *
		FROM dbo.ACCOUNTS_CRED_PERC
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

		UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
		SET CALC_AMOUNT = @calc_amount_2,
			TOTAL_CALC_AMOUNT = @total_calc_amount_2,
			LAST_CALC_DATE = @last_calc_date_2,
			MIN_PROCESSING_DATE = @min_processing_date_2,
			MIN_PROCESSING_TOTAL_CALC_AMOUNT = @min_processing_total_calc_amount_2
		WHERE ACC_ID = @depo_acc_id
		IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

		EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @depo_acc_id, @user_id
		IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
	END


	SET @acc_client_no = NULL
	SET @acc_date_open = NULL

	SELECT @acc_client_no = CLIENT_NO, @acc_date_open = DATE_OPEN
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @loss_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DEPO ACCOUNT NOT FOUND</ERR>', 16, 1); RETURN (1); END

	IF @acc_client_no IS NOT NULL AND @acc_client_no = @client_no AND @acc_date_open = @op_date
	BEGIN
		EXEC @r = dbo.depo_sp_delete_depo_account
			@acc_id = @loss_acc_id
		IF @@ERROR <> 0 OR (@r NOT IN (0, 1, 2, 3)) BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETING ACCOUNT (LOSS)!</ERR>', 16, 1); RETURN (1); END

		IF @@ERROR <> 0 OR @r = 1
		BEGIN
			IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; 
			RAISERROR ('<ERR>ÀÍÀÁÒÉÓ áÀÒãÉÓ ÀÍÂÀÒÉÛÆÄ ÀÒÉÓ ÀÒÀÍÖËÏÅÀÍÉ ÍÀÛÈÉ, ÀÍÂÀÒÉÛÉÓ ßÀÛËÀ ÛÄÖÞËÄÁÄËÉÀ!</ERR>', 16, 1)
			RETURN (1)
		END
	END

	SET @acc_client_no = NULL
	SET @acc_date_open = NULL

	SELECT @acc_client_no = CLIENT_NO, @acc_date_open = DATE_OPEN
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @accrual_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DEPO ACCOUNT NOT FOUND</ERR>', 16, 1); RETURN (1); END

	IF @acc_client_no IS NOT NULL AND @acc_client_no = @client_no AND @acc_date_open = @op_date
	BEGIN
		EXEC @r = dbo.depo_sp_delete_depo_account
			@acc_id = @accrual_acc_id
		IF @@ERROR <> 0 OR (@r NOT IN (0, 1, 2, 3)) BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR DELETING ACCOUNT (ACCRUAL)!</ERR>', 16, 1); RETURN (1); END

		IF @@ERROR <> 0 OR @r = 1
		BEGIN
			IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; 
			RAISERROR ('<ERR>ÀÍÀÁÒÉÓ ÃÀÒÉÝáÅÉÓ ÀÍÂÀÒÉÛÆÄ ÀÒÉÓ ÀÒÀÍÖËÏÅÀÍÉ ÍÀÛÈÉ, ÀÍÂÀÒÉÛÉÓ ßÀÛËÀ ÛÄÖÞËÄÁÄËÉÀ!</ERR>', 16, 1)
			RETURN (1)
		END
	END

	DECLARE
		@conv_depo_acc_id int,
		@conv_move_count smallint,
		@conv_move_count_type tinyint

	SELECT @conv_depo_acc_id = DEPO_ACC_ID
	FROM dbo.DEPO_VW_OP_ACC_DATA_CONVERT
	WHERE OP_ID = @op_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>OP DATA NOT FOUND</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACC_CHANGES (ACC_ID, [USER_ID], DESCRIP)
	VALUES (@conv_depo_acc_id, @user_id, 'ÀÍÂÀÒÉÛÉÓ ÛÄÝÅËÀ : UID REC_STATE ÊÒÄÃ.ÃÀÒÉÝáÅÀ (ÀÍÀÁÒÉÓ ÊÏÍÅÄÒÔÀÝÉÀ ÓáÅÀ ÅÀËÖÔÀÛÉ)')
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CHANGES</ERR>', 16, 1); RETURN (1); END

	SET @rec_id = SCOPE_IDENTITY()
	
	INSERT INTO dbo.ACCOUNTS_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS
	WHERE ACC_ID = @conv_depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS WITH (ROWLOCK, UPDLOCK)
	SET [UID] = [UID] + 1, REC_STATE = 1
	WHERE ACC_ID = @conv_depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT DATA</ERR>', 16, 1); RETURN (1); END

	INSERT INTO dbo.ACCOUNTS_CRED_PERC_ARC
	SELECT @rec_id, *
	FROM dbo.ACCOUNTS_CRED_PERC
	WHERE ACC_ID = @conv_depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC ARC</ERR>', 16, 1); RETURN (1); END

	UPDATE dbo.ACCOUNTS_CRED_PERC WITH (ROWLOCK, UPDLOCK)
	SET CALC_AMOUNT = @calc_amount_1,
		TOTAL_CALC_AMOUNT = @total_calc_amount_1,
		MIN_PROCESSING_DATE = @min_processing_date_1,
		MIN_PROCESSING_TOTAL_CALC_AMOUNT = @min_processing_total_calc_amount_1
	WHERE ACC_ID = @conv_depo_acc_id
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATE ACCOUNT CRED PERC</ERR>', 16, 1); RETURN (1); END

	EXEC @r = dbo.ON_USER_AFTER_EDIT_ACC @conv_depo_acc_id, @user_id
	IF @@ERROR <> 0 OR @r <> 0 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR PROC: ON_USER_AFTER_EDIT_ACC</ERR>', 16, 1); RETURN (1); END
END

UPDATE dbo.DEPO_OP WITH (ROWLOCK, UPDLOCK)
SET OP_STATE = 0, OP_ACC_DATA = NULL, AUTH_OWNER = NULL, DOC_REC_ID = CASE WHEN @op_docs_deleted = 1 THEN NULL ELSE DOC_REC_ID END, ACCRUE_DOC_REC_ID = CASE WHEN @accrue_docs_deleted = 1 THEN NULL ELSE ACCRUE_DOC_REC_ID END
WHERE OP_ID = @op_id
IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR('<ERR>ERROR INSERT ACCOUNT SCHEMA!</ERR>', 16, 1); RETURN (1); END

UPDATE dbo.DEPO_DEPOSITS WITH (ROWLOCK, UPDLOCK)
SET ROW_VERSION = ROW_VERSION + 1 
WHERE DEPO_ID = @depo_id
IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR UPDATING DEPOSIT DATA</ERR>', 16, 1); RETURN (1); END

INSERT INTO dbo.DEPO_DEPOSIT_CHANGES(DEPO_ID, [USER_ID], DESCRIP)
SELECT @depo_id, @user_id, 'ÏÐÄÒÀÝÉÉÓ ÂÀÖØÌÄÁÀ: '  + DESCRIP
FROM dbo.DEPO_OP_TYPES (NOLOCK)
WHERE [TYPE_ID] = @op_type
IF @@ERROR <> 0 OR @@ROWCOUNT <> 1 BEGIN IF @internal_transaction=1 AND @@TRANCOUNT>0 ROLLBACK; RAISERROR ('<ERR>ERROR OPERATION LOGGING</ERR>', 16, 1); RETURN (1); END

IF @internal_transaction=1 AND @@TRANCOUNT>0 
	COMMIT TRAN

RETURN (0)
GO
