CREATE TABLE [dbo].[CLIENT_EXTENSIONS_RATINGS_HISTORY_FULL]
(
[CLIENT_NO] [int] NOT NULL,
[DATE] [datetime] NOT NULL,
[RAITING] [varchar] (3) COLLATE Latin1_General_BIN NOT NULL,
[USER_ID] [int] NOT NULL,
[COMMENT] [varchar] (100) COLLATE Latin1_General_BIN NOT NULL,
[DATE_TIME] [datetime] NOT NULL CONSTRAINT [DF_CLIENT_EXTENSIONS_RATINGS_HISTORY_FULL_DATE_TIME] DEFAULT (getdate())
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE TRIGGER [dbo].[ON_CLIENT_EXTENSIONS_RATINGS_HISTORY_FULL_UPDATE]
   ON  [dbo].[CLIENT_EXTENSIONS_RATINGS_HISTORY_FULL]
   AFTER INSERT,DELETE
AS 
BEGIN
	SET NOCOUNT ON;

	IF (SELECT COUNT(*) FROM inserted) <> 1 RETURN

	DECLARE 
		@client_no int,
		@date datetime,
		@raiting varchar(3),
		@user_id int,
		@comment varchar(100)

	SELECT @client_no = CLIENT_NO, @date = DATE, @raiting = RAITING, @user_id = [USER_ID], @comment = COMMENT
	FROM inserted

	IF NOT EXISTS (SELECT * FROM dbo.CLIENT_EXTENSIONS_RATINGS_HISTORY WHERE CLIENT_NO = @client_no AND DATE = @date)
		INSERT INTO dbo.CLIENT_EXTENSIONS_RATINGS_HISTORY (CLIENT_NO, DATE, RAITING, [USER_ID], COMMENT)
		VALUES (@client_no, @date, @raiting, @user_id, @comment)
	ELSE
		UPDATE dbo.CLIENT_EXTENSIONS_RATINGS_HISTORY
		SET RAITING = @raiting, [USER_ID] = @user_id, COMMENT = @comment
		WHERE CLIENT_NO = @client_no AND DATE = @date
END
GO
ALTER TABLE [dbo].[CLIENT_EXTENSIONS_RATINGS_HISTORY_FULL] ADD CONSTRAINT [PK_CLIENT_EXTENSIONS_RATINGS_HISTORY_FULL] PRIMARY KEY CLUSTERED  ([CLIENT_NO], [DATE_TIME]) ON [PRIMARY]
GO
