CREATE TABLE [dbo].[OPS_0000]
(
[REC_ID] [int] NOT NULL IDENTITY(1, 1),
[UID] [int] NOT NULL CONSTRAINT [DF_OPS_0000_UID] DEFAULT ((0)),
[DOC_DATE] [smalldatetime] NOT NULL,
[DOC_DATE_IN_DOC] [smalldatetime] NULL,
[ISO] [dbo].[TISO] NOT NULL,
[AMOUNT] [money] NOT NULL,
[AMOUNT_EQU] [money] NOT NULL,
[DOC_NUM] [int] NULL,
[OP_CODE] [dbo].[TOPCODE] NULL,
[DEBIT_ID] [int] NOT NULL,
[CREDIT_ID] [int] NOT NULL,
[REC_STATE] [tinyint] NOT NULL,
[BNK_CLI_ID] [int] NULL,
[DESCRIP] [varchar] (150) COLLATE Latin1_General_BIN NULL,
[PARENT_REC_ID] [int] NULL,
[OWNER] [int] NOT NULL,
[DOC_TYPE] [smallint] NOT NULL,
[ACCOUNT_EXTRA] [dbo].[TACCOUNT] NULL,
[PROD_ID] [int] NULL,
[FOREIGN_ID] [int] NULL,
[CHANNEL_ID] [int] NULL,
[DEPT_NO] [int] NULL,
[IS_SUSPICIOUS] [bit] NOT NULL CONSTRAINT [DF_OPS_0000_IS_SUSPICIOUS] DEFAULT ((0)),
[CASHIER] [int] NULL,
[CHK_SERIE] [varchar] (4) COLLATE Latin1_General_BIN NULL,
[CASH_AMOUNT] [money] NULL,
[TREASURY_CODE] [varchar] (9) COLLATE Latin1_General_BIN NULL,
[TAX_CODE_OR_PID] [varchar] (11) COLLATE Latin1_General_BIN NULL,
[RELATION_ID] [int] NULL,
[FLAGS] [int] NOT NULL CONSTRAINT [DF_OPS_0000_FLAGS] DEFAULT ((0)),
[BRANCH_ID] [int] NULL
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[ON_OPS_0000_SHADOWS_DELETE_TRIGGER] ON [dbo].[OPS_0000]
FOR DELETE
AS
 
SET NOCOUNT ON
 
DECLARE @tbl TABLE (ACC_ID int NOT NULL PRIMARY KEY CLUSTERED, DBO money, CRO money)
 
INSERT INTO @tbl
SELECT H.ACC_ID, SUM(H.D), SUM(H.C)
FROM (
    SELECT DEBIT_ID AS ACC_ID, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(DEBIT_ID) <> 2 THEN -AMOUNT ELSE $0.0000 END AS D, $0.0000 AS C FROM deleted
    UNION ALL
    SELECT CREDIT_ID, $0.0000, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(CREDIT_ID) = 2 THEN -AMOUNT ELSE $0.0000 END FROM deleted) H
GROUP BY H.ACC_ID
 
UPDATE dbo.ACCOUNTS_DETAILS WITH (ROWLOCK)
SET UID2 = UID2 + 1, SHADOW_DBO = ISNULL(SHADOW_DBO, $0.0000) + ISNULL(H.DBO, $0.00), SHADOW_CRO = ISNULL(SHADOW_CRO, $0.0000) + ISNULL(H.CRO, $0.00)
FROM dbo.ACCOUNTS_DETAILS A
  INNER JOIN @tbl H ON A.ACC_ID = H.ACC_ID
WHERE H.DBO <> $0.0000 OR H.CRO <> $0.0000
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[ON_OPS_0000_SHADOWS_INSERT_TRIGGER] ON [dbo].[OPS_0000]
FOR INSERT
AS
 
SET NOCOUNT ON
 
INSERT INTO dbo.OPS_HELPER_0000 WITH (ROWLOCK) (ACC_ID, DT, REC_ID) 
SELECT DEBIT_ID, DOC_DATE, REC_ID FROM inserted
 
INSERT INTO dbo.OPS_HELPER_0000 WITH (ROWLOCK) (ACC_ID, DT, REC_ID)
SELECT CREDIT_ID, DOC_DATE, REC_ID FROM inserted
 

DECLARE @tbl TABLE (ACC_ID int NOT NULL PRIMARY KEY CLUSTERED, DBO money, CRO money)
 
INSERT INTO @tbl
SELECT H.ACC_ID, SUM(H.D), SUM(H.C)
FROM (
    SELECT DEBIT_ID AS ACC_ID, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(DEBIT_ID) <> 2 THEN AMOUNT ELSE $0.0000 END AS D, $0.0000 AS C FROM inserted
    UNION ALL
    SELECT CREDIT_ID, $0.0000, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(CREDIT_ID) = 2 THEN AMOUNT ELSE $0.0000 END FROM inserted
) H
GROUP BY H.ACC_ID
 
UPDATE dbo.ACCOUNTS_DETAILS WITH (ROWLOCK)
SET UID2 = UID2 + 1, SHADOW_DBO = ISNULL(SHADOW_DBO, $0.0000) + ISNULL(H.DBO, $0.0000), SHADOW_CRO = ISNULL(SHADOW_CRO, $0.0000) + ISNULL(H.CRO, $0.0000)
FROM dbo.ACCOUNTS_DETAILS A
  INNER JOIN @tbl H ON A.ACC_ID = H.ACC_ID
WHERE H.DBO <> $0.0000 OR H.CRO <> $0.0000
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE TRIGGER [dbo].[ON_OPS_0000_SHADOWS_UPDATE_TRIGGER] ON [dbo].[OPS_0000]
FOR UPDATE
AS
 
SET NOCOUNT ON

IF UPDATE(DOC_DATE) OR UPDATE(DEBIT_ID) OR UPDATE(CREDIT_ID) OR UPDATE(REC_ID)
BEGIN
    DELETE dbo.OPS_HELPER_0000 WITH (ROWLOCK)
    FROM dbo.OPS_HELPER_0000 S
        INNER JOIN deleted D ON S.ACC_ID = D.DEBIT_ID AND S.DT = D.DOC_DATE AND S.REC_ID = D.REC_ID
 
    DELETE dbo.OPS_HELPER_0000 WITH (ROWLOCK)
    FROM dbo.OPS_HELPER_0000 S
        INNER JOIN deleted D ON S.ACC_ID = D.CREDIT_ID AND S.DT = D.DOC_DATE AND S.REC_ID = D.REC_ID
 
    INSERT INTO dbo.OPS_HELPER_0000 WITH (ROWLOCK) (ACC_ID, DT, REC_ID)
    SELECT DEBIT_ID, DOC_DATE, REC_ID FROM inserted
    
    INSERT INTO dbo.OPS_HELPER_0000 WITH (ROWLOCK) (ACC_ID, DT, REC_ID)
    SELECT CREDIT_ID, DOC_DATE, REC_ID FROM inserted
END
 
DECLARE @tbl TABLE (ACC_ID int NOT NULL PRIMARY KEY CLUSTERED, DBO money, CRO money)
 
INSERT INTO @tbl
SELECT H.ACC_ID, SUM(H.D), SUM(H.C)
FROM (
    SELECT DEBIT_ID AS ACC_ID, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(DEBIT_ID) <> 2 THEN AMOUNT ELSE $0.0000 END AS D, $0.0000 AS C FROM inserted
    UNION ALL
    SELECT CREDIT_ID, $0.0000, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(CREDIT_ID) = 2 THEN AMOUNT ELSE $0.0000 END FROM inserted
    UNION ALL
    SELECT DEBIT_ID, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(DEBIT_ID) <> 2 THEN -AMOUNT ELSE $0.0000 END, $0.0000 FROM deleted
    UNION ALL
    SELECT CREDIT_ID, $0.0000, CASE WHEN REC_STATE >= 10 OR dbo.acc_get_act_pas(CREDIT_ID) = 2 THEN -AMOUNT ELSE $0.0000 END FROM deleted) H
GROUP BY H.ACC_ID
 
UPDATE dbo.ACCOUNTS_DETAILS WITH (ROWLOCK)
SET UID2 = UID2 + 1, SHADOW_DBO = ISNULL(SHADOW_DBO, $0.0000) + ISNULL(H.DBO, $0.00), SHADOW_CRO = ISNULL(SHADOW_CRO, $0.0000) + ISNULL(H.CRO, $0.00)
FROM dbo.ACCOUNTS_DETAILS A
  INNER JOIN @tbl H ON A.ACC_ID = H.ACC_ID
WHERE H.DBO <> $0.0000 OR H.CRO <> $0.0000
GO
ALTER TABLE [dbo].[OPS_0000] WITH NOCHECK ADD CONSTRAINT [CK_OPS_AMOUNT_GT_0] CHECK (([AMOUNT]>(0)))
GO
ALTER TABLE [dbo].[OPS_0000] WITH NOCHECK ADD CONSTRAINT [CK_OPS_DEBIT_NE_CREDIT] CHECK (([DEBIT_ID]<>[CREDIT_ID]))
GO
ALTER TABLE [dbo].[OPS_0000] ADD CONSTRAINT [CK_OPS_0000] CHECK (([DOC_DATE]>='20170901'))
GO
ALTER TABLE [dbo].[OPS_0000] ADD CONSTRAINT [PK_OPS_0000] PRIMARY KEY CLUSTERED  ([REC_ID]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_ACC_EXTRA] ON [dbo].[OPS_0000] ([ACCOUNT_EXTRA]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_CREDIT_ID] ON [dbo].[OPS_0000] ([CREDIT_ID]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_DEBIT_ID] ON [dbo].[OPS_0000] ([DEBIT_ID]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_DEPT_NO] ON [dbo].[OPS_0000] ([DEPT_NO]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_DT] ON [dbo].[OPS_0000] ([DOC_DATE]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_DOC_TYPE] ON [dbo].[OPS_0000] ([DOC_TYPE]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_ISO] ON [dbo].[OPS_0000] ([ISO]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_OWNER] ON [dbo].[OPS_0000] ([OWNER]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_PARENT_REC_ID] ON [dbo].[OPS_0000] ([PARENT_REC_ID]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_OPS_0000_RELATION_ID] ON [dbo].[OPS_0000] ([RELATION_ID]) ON [PRIMARY]
GO
ALTER TABLE [dbo].[OPS_0000] WITH NOCHECK ADD CONSTRAINT [FK_OPS_CREDIT_ID_IS_IN_ACCOUNTS] FOREIGN KEY ([CREDIT_ID]) REFERENCES [dbo].[ACCOUNTS] ([ACC_ID])
GO
ALTER TABLE [dbo].[OPS_0000] WITH NOCHECK ADD CONSTRAINT [FK_OPS_DEBIT_ID_IS_IN_ACCOUNTS] FOREIGN KEY ([DEBIT_ID]) REFERENCES [dbo].[ACCOUNTS] ([ACC_ID])
GO
ALTER TABLE [dbo].[OPS_0000] WITH NOCHECK ADD CONSTRAINT [FK_OPS_ISO_IS_IN_VAL_CODES] FOREIGN KEY ([ISO]) REFERENCES [dbo].[VAL_CODES] ([ISO]) ON UPDATE CASCADE
GO
ALTER TABLE [dbo].[OPS_0000] WITH NOCHECK ADD CONSTRAINT [FK_OPS_OWNER_IS_IN_USERS] FOREIGN KEY ([OWNER]) REFERENCES [dbo].[USERS] ([USER_ID])
GO
