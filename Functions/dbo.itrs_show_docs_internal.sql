SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE FUNCTION [dbo].[itrs_show_docs_internal] (@start_date smalldatetime, @end_date smalldatetime, @type tinyint, @acc_id int = null)
RETURNS @tbl TABLE 
	(
	OP_NUM int NOT NULL,

	DEBIT TACCOUNT NOT NULL,
	CREDIT TACCOUNT NOT NULL,

	REC_ID int NOT NULL,
	[UID] int NOT NULL,
	DOC_DATE smalldatetime NOT NULL,
	DOC_DATE_IN_DOC smalldatetime NULL,
	ISO TISO NOT NULL,
	AMOUNT money NOT NULL,
	AMOUNT_EQU money NOT NULL,
	DOC_NUM int NULL,
	OP_CODE TOPCODE NULL,
	DEBIT_ID int NOT NULL,
	CREDIT_ID int NOT NULL,
	REC_STATE tinyint NOT NULL,
	BNK_CLI_ID int NULL,
	DESCRIP varchar(150) NULL,
	PARENT_REC_ID int NULL,
	[OWNER] int NOT NULL,
	DOC_TYPE smallint NOT NULL,
	ACCOUNT_EXTRA TACCOUNT NULL,
	PROD_ID int NULL,
	FOREIGN_ID int NULL,
	CHANNEL_ID int NULL,
	DEPT_NO int NULL,
	IS_SUSPICIOUS bit NOT NULL,
	CASHIER int NULL,
	CHK_SERIE varchar(4) NULL,
	CASH_AMOUNT money NULL,
	TREASURY_CODE varchar(9) NULL,
	TAX_CODE_OR_PID varchar(11) NULL,
	RELATION_ID int NULL,
	FLAGS int NOT NULL,
	BRANCH_ID int NULL,

	IS_JURIDICAL bit NULL, 
	IS_RESIDENT2 bit NULL,
	AMOUNT_USD money NULL,
	ITRS_CODE$ varchar(4) NULL,
	ITRS_COUNTRY$ varchar(2) NULL,
	ITRS_PARTNER$ varchar(100) NULL,
	ITRS_SEGMENT$ varchar(1) NULL,
	ITRS_COMMENT$ varchar(100) NULL,

	REC_TYPE tinyint NOT NULL,

	ORIG_AMOUNT money NOT NULL,
	ORIG_ISO TISO NOT NULL,
	ORIG_DOC_DATE smalldatetime NOT NULL,
	ORIG_DOC_TYPE int NOT NULL,
	ORIG_DOC_REC_ID int NOT NULL,
	ORIG_ACC_ID int NOT NULL
)
AS
BEGIN
	DECLARE @corr_accounts TABLE (ACC_ID int NOT NULL PRIMARY KEY, ACCOUNT decimal(15,0) NOT NULL)
	DECLARE @nonres_accounts TABLE (ACC_ID int NOT NULL PRIMARY KEY, ACCOUNT decimal(15,0) NOT NULL, IS_JURIDICAL bit NOT NULL)

	IF @type & 0x03 <> 0
		INSERT INTO @corr_accounts
		SELECT A.ACC_ID, A.ACCOUNT
		FROM dbo.itrs_show_accounts_corr () A
		WHERE @acc_id IS NULL OR A.ACC_ID = @acc_id 

	IF @type & 0x0C <> 0
		INSERT INTO @nonres_accounts
		SELECT A.ACC_ID, A.ACCOUNT, A.IS_JURIDICAL
		FROM dbo.itrs_show_accounts_nonres () A
		WHERE @acc_id IS NULL OR A.ACC_ID = @acc_id 

	-- Corr. accounts debit - ჩარიცხვა
	IF @type & 0x01 <> 0 AND EXISTS(SELECT * FROM @corr_accounts)
	BEGIN
		INSERT INTO @tbl
		SELECT 
			CASE WHEN O.PARENT_REC_ID > 0 THEN O.PARENT_REC_ID ELSE O.REC_ID END AS OP_NUM, 
			ACC1.ACCOUNT AS DEBIT, ACC2.ACCOUNT AS CREDIT, 
			O.*,
			C2.IS_JURIDICAL AS IS_JURIDICAL, 
			NULL AS IS_RESIDENT2,
			CASE WHEN O.ISO = 'USD' THEN O.AMOUNT ELSE O.AMOUNT_EQU / dbo.get_rate ('USD', O.DOC_DATE) END AS AMOUNT_USD, 
			A1.ATTRIB_VALUE AS ITRS_CODE$,
			A2.ATTRIB_VALUE AS ITRS_COUNTRY$,
			A3.ATTRIB_VALUE AS ITRS_PARTNER$,
			A4.ATTRIB_VALUE AS ITRS_SEGMENT$,
			A5.ATTRIB_VALUE AS ITRS_COMMENT$,
			1 AS REC_TYPE,
			-OO.AMOUNT AS ORIG_AMOUNT,
			OO.ISO AS ORIG_ISO,
			OO.DOC_DATE AS ORIG_DOC_DATE,
			OO.DOC_TYPE AS ORIG_DOC_TYPE,
			OO.REC_ID AS ORIG_DOC_REC_ID,
			CA.ACC_ID AS ORIG_ACC_ID
		FROM dbo.OPS_FULL OO(NOLOCK)
			INNER JOIN @corr_accounts CA ON CA.ACC_ID = OO.DEBIT_ID
			INNER JOIN impexp.DOCS_IN_SWIFT_FULL S (NOLOCK) ON S.FINALYZE_DOC_REC_ID = CASE WHEN S.ISO=OO.ISO THEN OO.REC_ID ELSE OO.PARENT_REC_ID END AND OO.REC_ID < S.DOC_REC_ID
			INNER JOIN dbo.OPS_FULL O (NOLOCK) ON O.REC_ID = S.DOC_REC_ID 
			INNER JOIN dbo.ACCOUNTS ACC2 (NOLOCK) ON ACC2.ACC_ID = O.CREDIT_ID
			INNER JOIN dbo.ACCOUNTS ACC1 (NOLOCK) ON ACC1.ACC_ID = O.DEBIT_ID
			LEFT JOIN dbo.CLIENTS C2 (NOLOCK) ON C2.CLIENT_NO = ACC2.CLIENT_NO
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A1 (NOLOCK) ON A1.REC_ID = O.REC_ID AND A1.ATTRIB_CODE = '$ITRS_CODE'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A2 (NOLOCK) ON A2.REC_ID = O.REC_ID AND A2.ATTRIB_CODE = '$ITRS_COUNTRY'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A3 (NOLOCK) ON A3.REC_ID = O.REC_ID AND A3.ATTRIB_CODE = '$ITRS_PARTNER'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A4 (NOLOCK) ON A4.REC_ID = O.REC_ID AND A4.ATTRIB_CODE = '$ITRS_SECTOR'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A5 (NOLOCK) ON A5.REC_ID = O.REC_ID AND A5.ATTRIB_CODE = '$ITRS_COMMENT'
		WHERE OO.DOC_DATE BETWEEN @start_date AND @end_date

		INSERT INTO @tbl
		SELECT 
			CASE WHEN O.PARENT_REC_ID > 0 THEN O.PARENT_REC_ID ELSE O.REC_ID END AS OP_NUM, 
			CA.ACCOUNT AS DEBIT, ACC2.ACCOUNT AS CREDIT, 
			O.*,
			C2.IS_JURIDICAL AS IS_JURIDICAL, 
			NULL AS IS_RESIDENT2,
			CASE WHEN O.ISO = 'USD' THEN O.AMOUNT ELSE O.AMOUNT_EQU / dbo.get_rate ('USD', O.DOC_DATE) END AS AMOUNT_USD, 
			A1.ATTRIB_VALUE AS ITRS_CODE$,
			A2.ATTRIB_VALUE AS ITRS_COUNTRY$,
			A3.ATTRIB_VALUE AS ITRS_PARTNER$,
			A4.ATTRIB_VALUE AS ITRS_SEGMENT$,
			A5.ATTRIB_VALUE AS ITRS_COMMENT$,
			1 AS REC_TYPE,
			-O.AMOUNT AS ORIG_AMOUNT,
			O.ISO AS ORIG_ISO,
			O.DOC_DATE AS ORIG_DOC_DATE,
			O.DOC_TYPE AS ORIG_DOC_TYPE,
			O.REC_ID AS ORIG_DOC_REC_ID,
			CA.ACC_ID AS ORIG_ACC_ID
		FROM dbo.OPS_FULL O (NOLOCK)
			INNER JOIN @corr_accounts CA ON CA.ACC_ID = O.DEBIT_ID
			INNER JOIN dbo.ACCOUNTS ACC2 (NOLOCK) ON ACC2.ACC_ID = O.CREDIT_ID
			LEFT JOIN dbo.CLIENTS C2 (NOLOCK) ON C2.CLIENT_NO = ACC2.CLIENT_NO
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A1 (NOLOCK) ON A1.REC_ID = O.REC_ID AND A1.ATTRIB_CODE = '$ITRS_CODE'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A2 (NOLOCK) ON A2.REC_ID = O.REC_ID AND A2.ATTRIB_CODE = '$ITRS_COUNTRY'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A3 (NOLOCK) ON A3.REC_ID = O.REC_ID AND A3.ATTRIB_CODE = '$ITRS_PARTNER'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A4 (NOLOCK) ON A4.REC_ID = O.REC_ID AND A4.ATTRIB_CODE = '$ITRS_SECTOR'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A5 (NOLOCK) ON A5.REC_ID = O.REC_ID AND A5.ATTRIB_CODE = '$ITRS_COMMENT'
		WHERE O.DOC_DATE BETWEEN @start_date AND @end_date AND 
			NOT EXISTS (SELECT * FROM @tbl WHERE ORIG_DOC_REC_ID = O.REC_ID)
	END

	-- Corr. accounts credit – გადარიცხვა
	IF @type & 0x02 <> 0 AND EXISTS(SELECT * FROM @corr_accounts)
	BEGIN
		INSERT INTO @tbl
		SELECT 
			CASE WHEN O.PARENT_REC_ID > 0 THEN O.PARENT_REC_ID ELSE O.REC_ID END AS OP_NUM, 
			ACC1.ACCOUNT AS DEBIT, ACC2.ACCOUNT AS CREDIT, 
			O.*,
			C1.IS_JURIDICAL AS IS_JURIDICAL,
			NULL AS IS_RESIDENT2,
			CASE WHEN O.ISO = 'USD' THEN O.AMOUNT ELSE O.AMOUNT_EQU / dbo.get_rate ('USD', O.DOC_DATE) END AS AMOUNT_USD, 
			A1.ATTRIB_VALUE AS ITRS_CODE$,
			A2.ATTRIB_VALUE AS ITRS_COUNTRY$,
			A3.ATTRIB_VALUE AS ITRS_PARTNER$,
			A4.ATTRIB_VALUE AS ITRS_SEGMENT$,
			A5.ATTRIB_VALUE AS ITRS_COMMENT$,
			2 AS REC_TYPE,
			OO.AMOUNT AS ORIG_AMOUNT,
			OO.ISO AS ORIG_ISO,
			OO.DOC_DATE AS ORIG_DOC_DATE,
			OO.DOC_TYPE AS ORIG_DOC_TYPE,
			OO.REC_ID AS ORIG_DOC_REC_ID,
			CA.ACC_ID AS ORIG_ACC_ID
		FROM dbo.OPS_FULL OO (NOLOCK)
			INNER JOIN @corr_accounts CA ON CA.ACC_ID = OO.CREDIT_ID
			INNER JOIN impexp.DOCS_OUT_SWIFT_FULL S (NOLOCK) ON S.FINALYZE_DOC_REC_ID = CASE WHEN S.ISO=OO.ISO THEN OO.REC_ID ELSE OO.PARENT_REC_ID END AND OO.REC_ID >= S.DOC_REC_ID
			INNER JOIN dbo.OPS_FULL O (NOLOCK) ON O.REC_ID = S.DOC_REC_ID 
			INNER JOIN dbo.ACCOUNTS ACC1 (NOLOCK) ON ACC1.ACC_ID = O.DEBIT_ID
			INNER JOIN dbo.ACCOUNTS ACC2 (NOLOCK) ON ACC2.ACC_ID = O.CREDIT_ID
			LEFT JOIN dbo.CLIENTS C1 (NOLOCK) ON C1.CLIENT_NO = ACC1.CLIENT_NO
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A1 (NOLOCK) ON A1.REC_ID = O.REC_ID AND A1.ATTRIB_CODE = '$ITRS_CODE'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A2 (NOLOCK) ON A2.REC_ID = O.REC_ID AND A2.ATTRIB_CODE = '$ITRS_COUNTRY'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A3 (NOLOCK) ON A3.REC_ID = O.REC_ID AND A3.ATTRIB_CODE = '$ITRS_PARTNER'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A4 (NOLOCK) ON A4.REC_ID = O.REC_ID AND A4.ATTRIB_CODE = '$ITRS_SECTOR'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A5 (NOLOCK) ON A5.REC_ID = O.REC_ID AND A5.ATTRIB_CODE = '$ITRS_COMMENT'
		WHERE OO.DOC_DATE BETWEEN @start_date AND @end_date

		INSERT INTO @tbl
		SELECT 
			CASE WHEN O.PARENT_REC_ID > 0 THEN O.PARENT_REC_ID ELSE O.REC_ID END AS OP_NUM, 
			ACC1.ACCOUNT AS DEBIT, CA.ACCOUNT AS CREDIT, 
			O.*,
			C1.IS_JURIDICAL AS IS_JURIDICAL,
			NULL AS IS_RESIDENT2,
			CASE WHEN O.ISO = 'USD' THEN O.AMOUNT ELSE O.AMOUNT_EQU / dbo.get_rate ('USD', O.DOC_DATE) END AS AMOUNT_USD, 
			A1.ATTRIB_VALUE AS ITRS_CODE$,
			A2.ATTRIB_VALUE AS ITRS_COUNTRY$,
			A3.ATTRIB_VALUE AS ITRS_PARTNER$,
			A4.ATTRIB_VALUE AS ITRS_SEGMENT$,
			A5.ATTRIB_VALUE AS ITRS_COMMENT$,
			2 AS REC_TYPE,
			O.AMOUNT AS ORIG_AMOUNT,
			O.ISO AS ORIG_ISO,
			O.DOC_DATE AS ORIG_DOC_DATE,
			O.DOC_TYPE AS ORIG_DOC_TYPE,
			O.REC_ID AS ORIG_DOC_REC_ID,
			CA.ACC_ID AS ORIG_ACC_ID
		FROM dbo.OPS_FULL O (NOLOCK)
			INNER JOIN @corr_accounts CA ON CA.ACC_ID = O.CREDIT_ID
			INNER JOIN dbo.ACCOUNTS ACC1 (NOLOCK) ON ACC1.ACC_ID = O.DEBIT_ID
			LEFT JOIN dbo.CLIENTS C1 (NOLOCK) ON C1.CLIENT_NO = ACC1.CLIENT_NO
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A1 (NOLOCK) ON A1.REC_ID = O.REC_ID AND A1.ATTRIB_CODE = '$ITRS_CODE'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A2 (NOLOCK) ON A2.REC_ID = O.REC_ID AND A2.ATTRIB_CODE = '$ITRS_COUNTRY'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A3 (NOLOCK) ON A3.REC_ID = O.REC_ID AND A3.ATTRIB_CODE = '$ITRS_PARTNER'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A4 (NOLOCK) ON A4.REC_ID = O.REC_ID AND A4.ATTRIB_CODE = '$ITRS_SECTOR'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A5 (NOLOCK) ON A5.REC_ID = O.REC_ID AND A5.ATTRIB_CODE = '$ITRS_COMMENT'
		WHERE O.DOC_DATE BETWEEN @start_date AND @end_date AND 
			NOT EXISTS (SELECT * FROM @tbl WHERE ORIG_DOC_REC_ID = O.REC_ID)
	END

	-- non. rezident debit
	IF @type & 0x04 <> 0 AND EXISTS(SELECT * FROM @nonres_accounts)
	BEGIN
		INSERT INTO @tbl
		SELECT 
			CASE WHEN O.PARENT_REC_ID > 0 THEN O.PARENT_REC_ID ELSE O.REC_ID END AS OP_NUM,
			CA.ACCOUNT AS DEBIT, ACC2.ACCOUNT AS CREDIT,
			O.*,
			CA.IS_JURIDICAL AS IS_JURIDICAL,
			C2.IS_RESIDENT AS IS_RESIDENT2,
			CASE WHEN O.ISO = 'USD' THEN O.AMOUNT ELSE O.AMOUNT_EQU / dbo.get_rate ('USD', O.DOC_DATE) END AS AMOUNT_USD,
			A1.ATTRIB_VALUE AS ITRS_CODE$,
			A2.ATTRIB_VALUE AS ITRS_COUNTRY$,
			A3.ATTRIB_VALUE AS ITRS_PARTNER$,
			A4.ATTRIB_VALUE AS ITRS_SEGMENT$,
			A5.ATTRIB_VALUE AS ITRS_COMMENT$,
			4 AS REC_TYPE,
			-O.AMOUNT AS ORIG_AMOUNT,
			O.ISO AS ORIG_ISO,
			O.DOC_DATE AS ORIG_DOC_DATE,
			O.DOC_TYPE AS ORIG_DOC_TYPE,
			O.REC_ID AS ORIG_DOC_REC_ID,
			CA.ACC_ID AS ORIG_ACC_ID
		FROM dbo.OPS_FULL O (NOLOCK)
			INNER JOIN @nonres_accounts CA ON CA.ACC_ID = O.DEBIT_ID
			INNER JOIN dbo.ACCOUNTS ACC2 (NOLOCK) ON ACC2.ACC_ID = O.CREDIT_ID
			LEFT JOIN dbo.CLIENTS C2 (NOLOCK) ON C2.CLIENT_NO = ACC2.CLIENT_NO
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A1 (NOLOCK) ON A1.REC_ID = O.REC_ID AND A1.ATTRIB_CODE = '$ITRS_CODE'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A2 (NOLOCK) ON A2.REC_ID = O.REC_ID AND A2.ATTRIB_CODE = '$ITRS_COUNTRY'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A3 (NOLOCK) ON A3.REC_ID = O.REC_ID AND A3.ATTRIB_CODE = '$ITRS_PARTNER'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A4 (NOLOCK) ON A4.REC_ID = O.REC_ID AND A4.ATTRIB_CODE = '$ITRS_SECTOR'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A5 (NOLOCK) ON A5.REC_ID = O.REC_ID AND A5.ATTRIB_CODE = '$ITRS_COMMENT'
		WHERE O.DOC_DATE BETWEEN @start_date AND @end_date
	END

	-- non. rezident credit
	IF @type & 0x08 <> 0 AND EXISTS(SELECT * FROM @nonres_accounts)
	BEGIN
		INSERT INTO @tbl
		SELECT 
			CASE WHEN O.PARENT_REC_ID > 0 THEN O.PARENT_REC_ID ELSE O.REC_ID END AS OP_NUM,
			ACC1.ACCOUNT AS DEBIT, CA.ACCOUNT AS CREDIT,
			O.*,
			CA.IS_JURIDICAL AS IS_JURIDICAL,
			C1.IS_RESIDENT AS IS_RESIDENT2,
			CASE WHEN O.ISO = 'USD' THEN O.AMOUNT ELSE O.AMOUNT_EQU / dbo.get_rate ('USD', O.DOC_DATE) END AS AMOUNT_USD,
			A1.ATTRIB_VALUE AS ITRS_CODE$,
			A2.ATTRIB_VALUE AS ITRS_COUNTRY$,
			A3.ATTRIB_VALUE AS ITRS_PARTNER$,
			A4.ATTRIB_VALUE AS ITRS_SEGMENT$,
			A5.ATTRIB_VALUE AS ITRS_COMMENT$,
			8 AS REC_TYPE,
			O.AMOUNT AS ORIG_AMOUNT,
			O.ISO AS ORIG_ISO,
			O.DOC_DATE AS ORIG_DOC_DATE,
			O.DOC_TYPE AS ORIG_DOC_TYPE,
			O.REC_ID AS ORIG_DOC_REC_ID,
			CA.ACC_ID AS ORIG_ACC_ID
		FROM dbo.OPS_FULL O (NOLOCK)
			INNER JOIN @nonres_accounts CA ON CA.ACC_ID = O.CREDIT_ID
			INNER JOIN dbo.ACCOUNTS ACC1 (NOLOCK) ON ACC1.ACC_ID = O.DEBIT_ID
			LEFT JOIN dbo.CLIENTS C1 (NOLOCK) ON C1.CLIENT_NO = ACC1.CLIENT_NO
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A1 (NOLOCK) ON A1.REC_ID = O.REC_ID AND A1.ATTRIB_CODE = '$ITRS_CODE'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A2 (NOLOCK) ON A2.REC_ID = O.REC_ID AND A2.ATTRIB_CODE = '$ITRS_COUNTRY'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A3 (NOLOCK) ON A3.REC_ID = O.REC_ID AND A3.ATTRIB_CODE = '$ITRS_PARTNER'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A4 (NOLOCK) ON A4.REC_ID = O.REC_ID AND A4.ATTRIB_CODE = '$ITRS_SECTOR'
			LEFT JOIN dbo.DOC_ATTRIBUTES_ARC A5 (NOLOCK) ON A5.REC_ID = O.REC_ID AND A5.ATTRIB_CODE = '$ITRS_COMMENT'
		WHERE O.DOC_DATE BETWEEN @start_date AND @end_date
	END

	RETURN
END
GO
